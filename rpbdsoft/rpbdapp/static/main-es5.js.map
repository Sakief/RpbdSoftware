{"version":3,"sources":["webpack:///src/app/main/reports/districtsummaryreport/districtreport/districtreport.component.ts","webpack:///src/app/main/reports/districtsummaryreport/districtreport/districtreport.component.html","webpack:///src/app/main/profile-grid/profile-grid.component.ts","webpack:///src/app/main/profile-grid/profile-grid.component.html","webpack:///src/app/main/profile-create/profile-create.component.ts","webpack:///src/app/main/profile-create/profile-create.component.html","webpack:///src/app/main/brand-update/brand-update.component.ts","webpack:///src/app/main/brand-update/brand-update.component.html","webpack:///src/app/services/profile.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/services/market-point.service.ts","webpack:///src/app/main/profile-crud/profile-crud.component.ts","webpack:///src/app/main/profile-crud/profile-crud.component.html","webpack:///src/app/main/zone-grid/zone-grid.component.ts","webpack:///src/app/main/zone-grid/zone-grid.component.html","webpack:///src/app/main/district/district.component.html","webpack:///src/app/main/district/district.component.ts","webpack:///src/app/main/market-create/market-create.component.ts","webpack:///src/app/main/market-create/market-create.component.html","webpack:///src/app/main/district/add-district/add-district.component.ts","webpack:///src/app/main/district/add-district/add-district.component.html","webpack:///src/app/services/merchandising.service.ts","webpack:///src/app/main/reports/overallmokamsummaryreport/overallmokamsummaryreport.component.ts","webpack:///src/app/main/reports/overallmokamsummaryreport/overallmokamsummaryreport.component.html","webpack:///src/app/main/reports/districtsummaryreport/districtretails/districtretails/districtretails.component.ts","webpack:///src/app/main/reports/districtsummaryreport/districtretails/districtretails/districtretails.component.html","webpack:///src/app/services/division.service.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/grid/grid.component.ts","webpack:///src/app/grid/grid.component.html","webpack:///src/app/main/market-update/market-update.component.ts","webpack:///src/app/main/market-update/market-update.component.html","webpack:///src/app/services/districtreportservice.ts","webpack:///src/app/services/districtretailsreports.service.ts","webpack:///src/app/main/reports/thanasummaryreport/thanasalesreport/thanasales/thanasales.component.ts","webpack:///src/app/main/reports/thanasummaryreport/thanasalesreport/thanasales/thanasales.component.html","webpack:///src/app/main/thana/thana.component.html","webpack:///src/app/main/thana/thana.component.ts","webpack:///src/app/main/brand-create/brand-create.component.ts","webpack:///src/app/main/brand-create/brand-create.component.html","webpack:///src/app/services/brand.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/main/merch-create/merch-create.component.ts","webpack:///src/app/main/merch-create/merch-create.component.html","webpack:///src/app/services/outletsalesreport.service.ts","webpack:///src/app/main/reports/thanaretails/thanaretails/thanaretails.component.ts","webpack:///src/app/main/reports/thanaretails/thanaretails/thanaretails.component.html","webpack:///src/app/main/main.module.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/main/zone-create/zone-create.component.ts","webpack:///src/app/main/zone-create/zone-create.component.html","webpack:///src/app/main/reports/outletsalesreport/outletsales/outletsales.component.ts","webpack:///src/app/main/reports/outletsalesreport/outletsales/outletsales.component.html","webpack:///src/app/main/division/division-view/division-view.component.ts","webpack:///src/app/main/division/division-view/division-view.component.html","webpack:///src/app/main/top-nav/top-nav.component.html","webpack:///src/app/main/top-nav/top-nav.component.ts","webpack:///src/app/main/division/division.component.html","webpack:///src/app/main/division/division.component.ts","webpack:///src/app/main/division/add-division/add-division.component.ts","webpack:///src/app/main/division/add-division/add-division.component.html","webpack:///src/app/main/navbar/navbar.component.ts","webpack:///src/app/main/navbar/navbar.component.html","webpack:///src/app/main/sidenav/sidenav.component.ts","webpack:///src/app/main/sidenav/sidenav.component.html","webpack:///src/app/services/overallmokam.service.ts","webpack:///src/app/main/merchandising-grid/merchandising-grid.component.ts","webpack:///src/app/main/merchandising-grid/merchandising-grid.component.html","webpack:///src/app/main/report/report.component.ts","webpack:///src/app/main/district/district-view/district-view.component.ts","webpack:///src/app/main/district/district-view/district-view.component.html","webpack:///src/app/main/thana/thana-view/thana-view.component.ts","webpack:///src/app/main/thana/thana-view/thana-view.component.html","webpack:///src/app/main/merchandising-create/merchandising-create.component.html","webpack:///src/app/main/merchandising-create/merchandising-create.component.ts","webpack:///src/app/main/header/header.component.ts","webpack:///src/app/main/header/header.component.html","webpack:///src/app/services/thanasalesreport.service.ts","webpack:///src/app/main/reports/thanadetailreport/thanadetailreport/thanadetailreport.component.ts","webpack:///src/app/main/reports/thanadetailreport/thanadetailreport/thanadetailreport.component.html","webpack:///src/app/main/profile-update/profile-update.component.ts","webpack:///src/app/main/profile-update/profile-update.component.html","webpack:///src/app/services/thanaretailsreports.service.ts","webpack:///src/app/main/brand-grid/brand-grid.component.ts","webpack:///src/app/main/brand-grid/brand-grid.component.html","webpack:///src/app/main/zone-update/zone-update.component.ts","webpack:///src/app/main/zone-update/zone-update.component.html","webpack:///src/app/main/reports/marketsalessummary/market-sales/market-sales.component.ts","webpack:///src/app/main/reports/marketsalessummary/market-sales/market-sales.component.html","webpack:///src/app/main/expan-pannel/expan-pannel.component.ts","webpack:///src/app/main/expan-pannel/expan-pannel.component.html","webpack:///src/app/services/thanadetailreport.service.ts","webpack:///src/app/services/district.service.ts","webpack:///src/app/main/market-grid/market-grid.component.ts","webpack:///src/app/main/market-grid/market-grid.component.html","webpack:///src/app/main/main.component.ts","webpack:///src/app/main/main.component.html","webpack:///src/app/services/mokamsalesreport.service.ts","webpack:///src/app/main/thana/add-thana/add-thana.component.ts","webpack:///src/app/main/thana/add-thana/add-thana.component.html","webpack:///src/app/services/zone.service.ts","webpack:///src/app/services/thana.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["DistrictReportComponent","districtreportservice","districtsalesColumnDefs","DistrictSalesReport","getDistrictReport","subscribe","districtreports","districtsalesrowData","error","console","log","params","api","columnApi","headerName","field","filter","rowGroup","resizable","sortable","children","aggFunc","valueParser","onGridReady","ProfileGridComponent","profileservice","columnDefs","createColumnDefs","getProfile","profiles","rowData","editable","ProfileCreateComponent","fb","router","profileForms","array","push","group","outlet_id","required","outlet_type_id","outlet_name","owner_name","holding_no","road_name","block_no","village","union","post_office","market_code","zone_code","thana_code","district_code","outlet_type","manager_name","respondent_designation","contact_no1","contact_no2","contact_no3","total_staff","outlet_landmark","gps_lat","gps_long","storage_capacity","front_length","front_width","weekly_holiday","nid","survey_by","entry_by","visit_date","fg","createProfile","value","res","patchValue","showNotification","category","notification","message","setTimeout","addProfileForm","BrandUpdateComponent","brandservice","brandForms","getBrand","addBrandForm","forEach","brand","brand_code","brand_name","company_name","updateBrand","i","deleteBrand","confirm","removeAt","ProfileService","httpClient","baseUrl","createUrl","updateUrl","deleteUrl","httpheaders","headers","get","formData","post","put","id","environment","production","MarketService","ProfileCrudComponent","profile","incremented_outlet_id","incremeneted_outlet_id","updateProfile","deleteProfile","ZoneGridComponent","zoneservice","getZone","zones","DistrictComponent","districtservice","add_district","districts","getDistrict","data","loadaddform","MarketCreateComponent","marketservice","marketForms","market_name","createMarket","addMarketForm","AddDistrictComponent","districtform","district_name","addDistrict","createDistrict","result","MerchandiseService","OverallmokamsummaryreportComponent","overallmokaservice","overallMokamColumnDefs","OverallMokamDetailsReport","crownOverallMokamColumnDefs","OverallCrownMokamDetailsReport","leadingBrandOverallMokamColumnDefs","OverallLeadingMokamReport","getMokamSummaryReport","overallmokamreports","overallMokamRowData","getCrownMokamSummaryReport","crownoverallmokamreports","crownOverallMokamRowData","getLeadingBrandMokamSummaryReport","leadingoverallmokamreports","leadningBrandOverallMokamRowData","DistrictretailsComponent","dsretailservice","endretailscolumnDefs","DistrictEndRetailsReport","startretailscolumnDefs","DistrictStartRetailsReport","getDistrictEndRetailsReport","districtendretailsreport","endretailsrowData","getDistrictStartRetailsReport","districtstartretailreport","startretailsrowData","DivisionService","division_code","division_name","body","JSON","stringify","AuthComponent","GridComponent","sizeColumnsToFit","MarketUpdateComponent","getMarket","market","updateMarket","deleteMarket","DistrictReportService","districtsalesUrl","DistrictRetailsReportService","districtendtretailsUrl","districtstartretailsUrl","ThanasalesComponent","thanasalesreportservice","thanasalesColumnDefs","ThanaSalesReport","getThanaSalesReport","thanasalesreports","thanasalesrowData","hide","groupHeader","ThanaComponent","thanaservice","add_thana","thanas","getThana","BrandCreateComponent","createBrand","BrandService","gridUrl","AppComponent","MerchCreateComponent","merchservice","submitted","merchForm","visit_month","brands","merchandising_tools","quantity","newBrands","createMerchandise","addMerch","addBrand","OutletSalesReportService","outletsalesUrl","ThanaretailsComponent","thretailservice","ThanaEndRetailsReport","ThanaStartRetailsReport","getThanaEndRetailsReport","thanaendretailsreport","getThanaStartRetailsReport","thanastartretailreport","resizablbe","routes","path","component","MainModule","forChild","withComponents","AuthModule","AppModule","forRoot","ZoneCreateComponent","zoneForms","zone_name","createZone","addZoneForm","OutletsalesComponent","outletsalesreportservice","outletsalesColumnDefs","OutletSalesReport","getOutletSalesReport","outletsalesreport","outletsalesrowData","DivisionViewComponent","divisionservice","getDivisions","divisions","TopNavComponent","isExpanded","showSubmenu","isShowing","showSubSubMenu","showDistrictSubMenu","showDivisionSubMenu","showThanaSubMenu","showZoneSubMenu","showBrandSubMenu","showMarketSubMenu","mouseenter","mouseleave","DivisionComponent","add_division","AddDivisionComponent","divisionform","addDivision","createDivision","controls","invalid","NavbarComponent","SidenavComponent","OverallMokamService","mokamsummaryUrl","crownmokamsummaryUrl","leadingmokamsummaryUrl","MerchandisingGridComponent","getMerchandise","merchandises","ReportComponent","DistrictViewComponent","ThanaViewComponent","event","modified","gridApi","forEachNode","node","modifiedRows","row","onCellValueChanged","MerchandisingCreateComponent","empForm","employees","firstName","lastName","skills","newEmployee","empIndex","at","skill","exp","employeeSkills","newSkill","skillIndex","onSubmit","addEmployee","HeaderComponent","toggleSideBarForMe","emit","window","dispatchEvent","Event","toggleSideBar","ThanaSalesReportService","thanasalesUrl","ThanadetailreportComponent","thanadetailservice","ThanaDetailsReport","crownColumnDefs","CrownDetailsReport","leadingColumnDefs","LeadingBrandDetailReport","getThanaDetailsReport","thanadetailreports","getCrownDetailReport","crowndetailreports","crownRowData","getLeadingBrandDetailReport","leadingdetailreports","leadingRowData","ProfileUpdateComponent","ThanaRetailsReportService","thanaendtretailsUrl","thanastartretailsUrl","BrandGridComponent","ZoneUpdateComponent","zone","updateZone","deleteZone","MarketSalesComponent","mokamsalesreportservice","mokamsalesColumnDefs","MokamSalesReport","getMokamSalesReport","mokamsalesreports","mokamsalesrowData","setPrinterFriendly","print","setNormal","eGridDiv","document","querySelector","style","height","setDomLayout","width","ExpanPannelComponent","Thanadetailservice","thanadetailsUrl","crowndetailsUrl","leadingdetailUrl","DistrictService","MarketGridComponent","markets","MainComponent","sideBarOpen","$event","sideBarToggler","MokamSalesReportService","mokamsalesUrl","AddThanaComponent","thanaform","thana_name","addThana","createThana","ZoneService","ThanaService","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DistrictReportService } from 'src/app/services/districtreportservice';\nimport { ColumnApi, GridApi } from 'ag-grid-community';\nimport 'ag-grid-enterprise';\n\n@Component({\n  selector: 'app-districtreport',\n  templateUrl: './districtreport.component.html',\n  styleUrls: ['./districtreport.component.scss'],\n})\nexport class DistrictReportComponent implements OnInit {\n  districtsalesrowData: any;\n  districtsalesColumnDefs: any;\n\n  private api!: GridApi;\n  private columnApi!: ColumnApi;\n  router: any;\n\n  constructor(private districtreportservice: DistrictReportService) {\n    this.districtsalesColumnDefs = this.DistrictSalesReport();\n  }\n\n  ngOnInit(): void {\n    this.districtreportservice.getDistrictReport().subscribe(\n      (districtreports) => {\n        this.districtsalesrowData = districtreports;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  onGridReady(params: { api: GridApi; columnApi: ColumnApi }): void {\n    this.api = params.api;\n    this.columnApi = params.columnApi;\n  }\n\n  private DistrictSalesReport() {\n    return [\n      {\n        headerName: 'District Name',\n        field: 'district_name',\n        filter: true,\n        rowGroup: true,\n      },\n      {\n        headerName: 'Brand Name',\n        field: 'brand_name',\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'End Month Sales Volume/Share',\n\n        children: [\n          {\n            headerName: 'End Month',\n            field: 'end_month',\n          },\n          {\n            headerName: 'Sales',\n            field: 'end_month_sale_volume',\n            sortable: true,\n            resizable: true,\n            aggFunc: 'sum',\n            valueParser: 'Number(newValue)',\n          },\n          {\n            headerName: 'Share',\n            field: 'end_month_ms',\n            sortable: true,\n            resizable: true,\n          },\n        ],\n      },\n      {\n        headerName: 'Start Month Sales Volume',\n        children: [\n          {\n            headerName: 'Start Month',\n            field: 'start_month',\n          },\n          {\n            headerName: 'Sales',\n            field: 'start_month_sale_volume',\n            sortable: true,\n            resizable: true,\n            aggFunc: 'sum',\n            valueParser: 'Number(newValue)',\n          },\n          {\n            headerName: 'Share',\n            field: 'start_month_ms',\n            sortable: true,\n            resizable: true,\n          },\n        ],\n      },\n    ];\n  }\n}\n","<app-header></app-header>\n\n<header class=\"header\">\n  <h1>Monthswise District Sales Report</h1>\n</header>\n\n<ag-grid-angular\n  style=\"width: 100%; height: 100%; justify-content: center\"\n  class=\"ag-theme-alpine\"\n  (gridReady)=\"onGridReady($event)\"\n  [columnDefs]=\"districtsalesColumnDefs\"\n  [rowData]=\"districtsalesrowData\"\n  [groupIncludeTotalFooter]=\"true\"\n>\n</ag-grid-angular>\n","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ColDef, ColumnApi, GridApi } from 'ag-grid-community';\nimport { ProfileService } from '../../services/profile.service';\nimport { Profile } from '../../model/profile';\n\n@Component({\n  selector: 'app-profile-grid',\n  templateUrl: './profile-grid.component.html',\n  styleUrls: ['./profile-grid.component.scss'],\n})\nexport class ProfileGridComponent implements OnInit {\n  rowData: any;\n  columnDefs: any;\n\n  // gridApi and columnApi\n  private api!: GridApi;\n  private columnApi!: ColumnApi;\n  router: any;\n\n  // @Output() new createNewDivision = new EventEmitter();\n\n  // inject the athleteService\n  constructor(private profileservice: ProfileService) {\n    this.columnDefs = this.createColumnDefs();\n  }\n\n  // on init, subscribe to the athelete data\n  ngOnInit() {\n    this.profileservice.getProfile().subscribe(\n      (profiles) => {\n        this.rowData = profiles;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n\n    // newDivision(){\n    //     this.createNewDivision.emit();\n    // }\n  }\n  // before grid initialised\n\n  // one grid initialisation, grap the APIs and auto resize the columns to fit the available space\n  onGridReady(params: { api: GridApi; columnApi: ColumnApi }): void {\n    this.api = params.api;\n    this.columnApi = params.columnApi;\n\n    // this.api.sizeColumnsToFit();\n  }\n\n  // create some simple column definitions\n  private createColumnDefs() {\n    return [\n      {\n        headerName: 'Outlet ID',\n        field: 'outlet_id',\n        editable: true,\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n      {\n        headerName: 'Outlet Type ID',\n        field: 'outlet_type_id',\n        editable: true,\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Outlet Name',\n        field: 'outlet_name',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Owner Name',\n        field: 'owner_name',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Holding No',\n        field: 'holding_no',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Road Name',\n        field: 'road_name',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Block No',\n        field: 'block_no',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Village',\n        field: 'village',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Union',\n        field: 'union',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Post Office',\n        field: 'post_office',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Market Code',\n        field: 'market_code',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Zone Code',\n        field: 'zone_code',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Thana',\n        field: 'thana_code',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'District',\n        field: 'district_code',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Manager Name',\n        field: 'manager_name',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Respondent Designation',\n        field: 'respondent_designation',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Contact No 1',\n        field: 'contact_no1',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Contact No 2',\n        field: 'contact_no 2',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Contact No 3',\n        field: 'contact_no 3',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Total Staff',\n        field: 'total_staff',\n\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Outlet Landmark',\n        field: 'outlet_landmark',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'GPS Lattitude',\n        field: 'gps_lat',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'GPS Longitude',\n        field: 'gps_long',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Storage Capacity',\n        field: 'storage_capacity',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Front Length',\n        field: 'front_length',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Front Width',\n        field: 'front_width',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Weekly Holiday',\n        field: 'weekly_holiday',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'NID/Trade License No',\n        field: 'outlet_name',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Survey By',\n        field: 'survey_by',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Entry By',\n        field: 'entry_by',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Visit Date',\n        field: 'visit_date',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n    ];\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"example-toolbar\">\n  <h1 class=\"example-app-name\" routerLink=\"/main\">Crown RPBD</h1>\n</mat-toolbar>\n<ag-grid-angular\n  style=\"width: 100%; height: 600px\"\n  class=\"ag-theme-alpine\"\n  (gridReady)=\"onGridReady($event)\"\n  [columnDefs]=\"columnDefs\"\n  [rowData]=\"rowData\"\n>\n</ag-grid-angular>\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ProfileService } from 'src/app/services/profile.service';\n\n@Component({\n  selector: 'app-profile-create',\n  templateUrl: './profile-create.component.html',\n  styleUrls: ['./profile-create.component.scss'],\n})\nexport class ProfileCreateComponent implements OnInit {\n  profileForms: FormArray = this.fb.array([]);\n  notification: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private profileservice: ProfileService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  addProfileForm() {\n    this.profileForms.push(\n      this.fb.group({\n        outlet_id: ['', Validators.required],\n        outlet_type_id: [''],\n        outlet_name: [''],\n        owner_name: [''],\n        holding_no: [''],\n        road_name: [''],\n        block_no: [''],\n        village: [''],\n        union: [''],\n        post_office: [''],\n        market_code: ['', Validators.required],\n        zone_code: ['', Validators.required],\n        thana_code: ['', Validators.required],\n        district_code: ['', Validators.required],\n        outlet_type: [''],\n        manager_name: [],\n        respondent_designation: [],\n        contact_no1: [],\n        contact_no2: [],\n        contact_no3: [],\n        total_staff: [],\n        outlet_landmark: [],\n        gps_lat: [],\n        gps_long: [],\n        storage_capacity: [],\n        front_length: [],\n        front_width: [],\n        weekly_holiday: [],\n        nid: [],\n        survey_by: [],\n        entry_by: [],\n        visit_date: [],\n      })\n    );\n  }\n\n  profileSubmit(fg: FormGroup) {\n    this.profileservice.createProfile(fg.value).subscribe((res: any) => {\n      fg.patchValue({ outlet_id: res.outlet_id });\n      this.showNotification('insert');\n    });\n  }\n\n  showNotification(category: any) {\n    switch (category) {\n      case 'insert':\n        this.notification = { class: 'text-success', message: 'saved!' };\n        break;\n\n      default:\n        break;\n    }\n    setTimeout(() => {\n      this.notification = null;\n    }, 2000);\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"example-toolbar\">\n  <h1 class=\"example-app-name\" routerLink=\"/main\">Crown RPBD</h1>\n</mat-toolbar>\n<div class=\"grid-Table\">\n  <div class=\"thead\">\n    <div class=\"tr\">\n      <div class=\"td\">\n        <button\n          class=\"btn btn-outline-success\"\n          (click)=\"addProfileForm()\"\n          style=\"width: 180px\"\n        >\n          <i class=\"fa fa-plus\"></i> New Profile\n        </button>\n      </div>\n      <div class=\"td\">Outlet ID.</div>\n      <div class=\"td\">Outlet Type ID.</div>\n      <div class=\"td\">Outlet Name</div>\n      <div class=\"td\">Owner Name</div>\n      <div class=\"td\">Holding No.</div>\n      <div class=\"td\">Road Name</div>\n      <div class=\"td\">Block No.</div>\n      <div class=\"td\">Village</div>\n      <div class=\"td\">Union</div>\n      <div class=\"td\">Post Office</div>\n      <div class=\"td\">Market Code</div>\n      <div class=\"td\">Zone Code</div>\n      <div class=\"td\">Thana Code</div>\n      <div class=\"td\">District Code</div>\n      <div class=\"td\">Outlet Type</div>\n      <div class=\"td\">Manager Name</div>\n      <div class=\"td\">Respondent Designation</div>\n      <div class=\"td\">Contact No1</div>\n      <div class=\"td\">Contact No2</div>\n      <div class=\"td\">Contact No3</div>\n      <div class=\"td\">Total Staff</div>\n      <div class=\"td\">Outlet Landmark</div>\n      <div class=\"td\">GPS Lattitude</div>\n      <div class=\"td\">GPS Longitude</div>\n      <div class=\"td\">Storage Capacity</div>\n      <div class=\"td\">Front Length</div>\n      <div class=\"td\">Front Width</div>\n      <div class=\"td\">Weekly Holiday</div>\n      <div class=\"td\">Nid</div>\n      <div class=\"td\">Survey By</div>\n      <div class=\"td\">Entry By</div>\n      <div class=\"td\">Vist Date</div>\n\n      <div class=\"td\">\n        action\n        <span *ngIf=\"notification\" class=\"elementToFadeInAndOut\">\n          <i class=\"fas fa-check-circle {{ notification.class }}\"></i>\n          {{ notification.message }}\n        </span>\n      </div>\n    </div>\n  </div>\n  <div class=\"tbody\">\n    <form\n      class=\"tr\"\n      [formGroup]=\"fg\"\n      *ngFor=\"let fg of profileForms.controls\"\n      (submit)=\"profileSubmit(fg)\"\n    >\n      <div class=\"td\">\n        <p>Create a Profile</p>\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"outlet_id\"\n          style=\"width: 130px\"\n        />\n      </div>\n\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"outlet_type_id\"\n          style=\"width: 145px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"outlet_name\"\n          style=\"width: 380px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"owner_name\"\n          style=\"width: 300px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"holding_no\"\n          style=\"width: 70px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"road_name\"\n          style=\"width: 100px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"block_no\"\n          style=\"width: 50px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"village\"\n          style=\"width: 180px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"union\"\n          style=\"width: 180px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"post_office\"\n          style=\"width: 180px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"market_code\"\n          style=\"width: 120px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"zone_code\"\n          style=\"width: 120px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"thana_code\"\n          style=\"width: 110px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"district_code\"\n          style=\"width: 100px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"outlet_type\"\n          style=\"width: 230px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"manager_name\"\n          style=\"width: 300px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"respondent_designation\"\n          style=\"width: 200px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"contact_no1\"\n          style=\"width: 140px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"contact_no2\"\n          style=\"width: 140px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"contact_no3\"\n          style=\"width: 140px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"total_staff\"\n          style=\"width: 45px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"outlet_landmark\"\n          style=\"width: 400px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"gps_lat\"\n          style=\"width: 100px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"gps_long\"\n          style=\"width: 100px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"storage_capacity\"\n          style=\"width: 70px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"front_length\"\n          style=\"width: 60px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"front_width\"\n          style=\"width: 60px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"weekly_holiday\"\n          style=\"width: 40px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"nid\"\n          style=\"width: 140px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"survey_by\"\n          style=\"width: 300px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"entry_by\"\n          style=\"width: 300px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"visit_date\"\n          style=\"width: 150px\"\n        />\n      </div>\n\n      <div class=\"td\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-success\"\n          [disabled]=\"fg.invalid\"\n          style=\"width: 130px\"\n        >\n          <i class=\"far fa-save fa-lg\"></i> Submit\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BrandService } from 'src/app/services/brand.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-brand-update',\n  templateUrl: './brand-update.component.html',\n  styleUrls: ['./brand-update.component.scss'],\n})\nexport class BrandUpdateComponent implements OnInit {\n  brandForms: FormArray = this.fb.array([]);\n  notification: any;\n  constructor(\n    private fb: FormBuilder,\n    private brandservice: BrandService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.brandservice.getBrand().subscribe((res) => {\n      if (res == []) this.addBrandForm();\n      else {\n        (res as []).forEach((brand: any) => {\n          this.brandForms.push(\n            this.fb.group({\n              brand_code: [brand.brand_code],\n              brand_name: [brand.brand_name],\n              company_name: [brand.company_name],\n            })\n          );\n        });\n      }\n    });\n  }\n\n  addBrandForm() {\n    this.brandForms.push(\n      this.fb.group({\n        brand_code: ['', Validators.required],\n        brand_name: ['', Validators.required],\n        company_name: [''],\n      })\n    );\n  }\n\n  brandUpdate(fg: FormGroup) {\n    this.brandservice.updateBrand(fg.value).subscribe((res: any) => {\n      this.showNotification('update');\n    });\n  }\n  onDelete(brand_code: number, i: any) {\n    // if (brand_code == 0) this.brandForms.removeAt(i);\n    //else if (confirm('Do you want to delete this outlet?'))\n    this.brandservice.deleteBrand(brand_code).subscribe((res) => {\n      confirm('Do you want to delete this brand?');\n      this.brandForms.removeAt(i);\n      this.showNotification('delete');\n    });\n  }\n  showNotification(category: any) {\n    switch (category) {\n      case 'update':\n        this.notification = { class: 'text-primary', message: 'updated!' };\n        break;\n      case 'delete':\n        this.notification = { class: 'text-danger', message: 'deleted!' };\n        break;\n\n      default:\n        break;\n    }\n    setTimeout(() => {\n      this.notification = null;\n    }, 2000);\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"example-toolbar\">\n  <h1 class=\"example-app-name\" routerLink=\"/main\">Crown RPBD</h1>\n</mat-toolbar>\n<div class=\"grid-Table\">\n  <div class=\"thead\">\n    <div class=\"tr\">\n      <div class=\"td\">Brand Code</div>\n      <div class=\"td\">Brand Name</div>\n      <div class=\"td\">Company Name</div>\n\n      <div class=\"td\">\n        action\n        <span *ngIf=\"notification\" class=\"elementToFadeInAndOut\">\n          <i class=\"fas fa-check-circle {{ notification.class }}\"></i>\n          {{ notification.message }}\n        </span>\n      </div>\n    </div>\n  </div>\n  <div class=\"tbody\">\n    <form\n      class=\"tr\"\n      [formGroup]=\"fg\"\n      *ngFor=\"let fg of brandForms.controls; let i = index\"\n      (submit)=\"brandUpdate(fg)\"\n    >\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"brand_code\"\n          style=\"width: 130px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"brand_name\"\n          style=\"width: 380px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"company_name\"\n          style=\"width: 300px\"\n        />\n      </div>\n\n      <div class=\"td\">\n        <button type=\"submit\" class=\"btn\">\n          <i class=\"far fa-save fa-lg\"></i>\n          Update\n        </button>\n        <button\n          class=\"btn btn-light ml-1\"\n          (click)=\"onDelete(fg.get('brand_code').value, i)\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Profile } from './/../model/profile';\r\nimport { stringify } from '@angular/compiler/src/util';\r\n// import 'rxjs/add/operator/do';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileService {\r\n  baseUrl = 'http://127.0.0.1:8000/api/profile-grid/';\r\n  createUrl = 'http://127.0.0.1:8000/api/profile-create/';\r\n  updateUrl = 'http://127.0.0.1:8000/api/profile-update/';\r\n  deleteUrl = 'http://127.0.0.1:8000/api/profile-delete/';\r\n\r\n  httpheaders = {\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getProfile() {\r\n    return this.httpClient.get(this.baseUrl);\r\n  }\r\n\r\n  createProfile(formData: any) {\r\n    return this.httpClient.post(this.createUrl, formData);\r\n  }\r\n  updateProfile(formData: any) {\r\n    return this.httpClient.put(this.updateUrl + formData.outlet_id, formData);\r\n  }\r\n  deleteProfile(id: any) {\r\n    return this.httpClient.delete(this.updateUrl + id);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MarketService {\r\n  baseUrl = 'http://127.0.0.1:8000/api/market-grid/';\r\n  createUrl = 'http://127.0.0.1:8000/api/market-create/';\r\n  updateUrl = 'http://127.0.0.1:8000/api/market-update/';\r\n\r\n  httpheaders = {\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getMarket() {\r\n    return this.httpClient.get(this.baseUrl);\r\n  }\r\n\r\n  createMarket(formData: any) {\r\n    return this.httpClient.post(this.createUrl, formData);\r\n  }\r\n\r\n  updateMarket(formData: any) {\r\n    return this.httpClient.put(this.updateUrl + formData.market_code, formData);\r\n  }\r\n\r\n  deleteMarket(id: any) {\r\n    return this.httpClient.delete(this.updateUrl + id);\r\n  }\r\n}\r\n","import { Component, OnInit, ResolvedReflectiveFactory } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { ProfileService } from 'src/app/services/profile.service';\n\n@Component({\n  selector: 'app-profile-crud',\n  templateUrl: './profile-crud.component.html',\n  styleUrls: ['./profile-crud.component.scss'],\n})\nexport class ProfileCrudComponent implements OnInit {\n  profileForms: FormArray = this.fb.array([]);\n  notification: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private profileservice: ProfileService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.profileservice.getProfile().subscribe((res) => {\n      if (res == []) this.addProfileForm();\n      else {\n        (res as []).forEach((profile: any) => {\n          this.profileForms.push(\n            this.fb.group({\n              incremented_outlet_id: [profile.incremented_outlet_id],\n              outlet_id: [profile.outlet_id],\n              outlet_name: [profile.outlet_name],\n              owner_name: [profile.owner_name],\n              holding_no: [profile.holding_no],\n              road_name: [profile.road_name],\n              block_no: [profile.block_no],\n              village: [profile.village],\n              union: [profile.union],\n              post_office: [profile.post_office],\n              market_code: [profile.market_code],\n              zone_code: [profile.zone_code],\n              thana_code: [profile.thana_code],\n              district_code: [profile.district_code],\n              outlet_type: [profile.outlet_type],\n              manager_name: [profile.manager_name],\n              respondent_designation: [profile.respondent_designation],\n              contact_no1: [profile.contact_no1],\n              contact_no2: [profile.contact_no2],\n              contact_no3: [profile.contact_no3],\n              total_staff: [profile.total_staff],\n              outlet_landmark: [profile.outlet_landmark],\n              gps_lat: [profile.gps_lat],\n              gps_long: [profile.gps_long],\n              storage_capacity: [profile.storage_capacity],\n              front_length: [profile.front_length],\n              front_width: [profile.front_width],\n              weekly_holiday: [profile.weekly_holiday],\n              nid: [profile.nid],\n              survey_by: [profile.survey_by],\n              entry_by: [profile.entry_by],\n              visit_date: [profile.visit_date],\n            })\n          );\n        });\n      }\n    });\n  }\n\n  // redirect() {\n  //   this.router.navigateByUrl('/main');\n  // }\n\n  addProfileForm() {\n    this.profileForms.push(\n      this.fb.group({\n        incremented_outlet_id: [0],\n        outlet_id: ['', Validators.required],\n        outlet_name: [''],\n        owner_name: [''],\n        holding_no: [''],\n        road_name: [''],\n        block_no: [''],\n        village: [''],\n        union: [''],\n        post_office: [''],\n        market_code: ['', Validators.required],\n        zone_code: ['', Validators.required],\n        thana_code: ['', Validators.required],\n        district_code: ['', Validators.required],\n        outlet_type: [''],\n        manager_name: [],\n        respondent_designation: [],\n        contact_no1: [],\n        contact_no2: [],\n        contact_no3: [],\n        total_staff: [],\n        outlet_landmark: [],\n        gps_lat: [],\n        gps_long: [],\n        storage_capacity: [],\n        front_length: [],\n        front_width: [],\n        weekly_holiday: [],\n        nid: [],\n        survey_by: [],\n        entry_by: [],\n        visit_date: [],\n      })\n    );\n  }\n\n  profileSubmit(fg: FormGroup) {\n    if (fg.value.incremented_outlet_id == 0)\n      this.profileservice.createProfile(fg.value).subscribe((res: any) => {\n        fg.patchValue({ incremeneted_outlet_id: res.incremented_outlet_id });\n        this.showNotification('insert');\n      });\n    else\n      this.profileservice.updateProfile(fg.value).subscribe((res: any) => {\n        this.showNotification('update');\n      });\n  }\n\n  onDelete(incremented_outlet_id: number, i: any) {\n    if (incremented_outlet_id == 0) this.profileForms.removeAt(i);\n    else if (confirm('Do you want to delete this outlet?'))\n      this.profileservice\n        .deleteProfile(incremented_outlet_id)\n        .subscribe((res) => {\n          this.profileForms.removeAt(i);\n          this.showNotification('delete');\n        });\n  }\n\n  showNotification(category: any) {\n    switch (category) {\n      case 'insert':\n        this.notification = { class: 'text-success', message: 'saved!' };\n        break;\n      case 'update':\n        this.notification = { class: 'text-primary', message: 'updated!' };\n        break;\n      case 'delete':\n        this.notification = { class: 'text-danger', message: 'deleted!' };\n        break;\n\n      default:\n        break;\n    }\n    setTimeout(() => {\n      this.notification = null;\n    }, 2000);\n  }\n}\n","<div class=\"grid-Table\">\n  <div class=\"thead\">\n    <div class=\"tr\">\n      <div class=\"td\">Outlet ID.</div>\n      <div class=\"td\">Outlet Name</div>\n      <div class=\"td\">Owner Name</div>\n      <div class=\"td\">Holding No.</div>\n      <div class=\"td\">Road Name</div>\n      <div class=\"td\">Block No.</div>\n      <div class=\"td\">Village</div>\n      <div class=\"td\">Union</div>\n      <div class=\"td\">Post Office</div>\n      <div class=\"td\">Market Code</div>\n      <div class=\"td\">Zone Code</div>\n      <div class=\"td\">Thana Code</div>\n      <div class=\"td\">District Code</div>\n      <div class=\"td\">Outlet Type</div>\n      <div class=\"td\">Manager Name</div>\n      <div class=\"td\">Respondent Designation</div>\n      <div class=\"td\">Contact No1</div>\n      <div class=\"td\">Contact No2</div>\n      <div class=\"td\">Contact No3</div>\n      <div class=\"td\">Total Staff</div>\n      <div class=\"td\">Outlet Landmark</div>\n      <div class=\"td\">GPS Lattitude</div>\n      <div class=\"td\">GPS Longitude</div>\n      <div class=\"td\">Storage Capacity</div>\n      <div class=\"td\">Front Length</div>\n      <div class=\"td\">Front Width</div>\n      <div class=\"td\">Weekly Holiday</div>\n      <div class=\"td\">Nid</div>\n      <div class=\"td\">Survey By</div>\n      <div class=\"td\">Entry By</div>\n      <div class=\"td\">Vist Date</div>\n      <div class=\"td\">\n        <button\n          class=\"btn btn-outline-success\"\n          (click)=\"addProfileForm()\"\n          style=\"width: 180px\"\n        >\n          <i class=\"fa fa-plus\"></i> New Profile\n        </button>\n      </div>\n      <div class=\"td\">\n        action\n        <span *ngIf=\"notification\" class=\"elementToFadeInAndOut\">\n          <i class=\"fas fa-check-circle {{ notification.class }}\"></i>\n          {{ notification.message }}\n        </span>\n      </div>\n    </div>\n  </div>\n  <div class=\"tbody\">\n    <form\n      class=\"tr\"\n      [formGroup]=\"fg\"\n      *ngFor=\"let fg of profileForms.controls; let i = index\"\n      (submit)=\"profileSubmit(fg)\"\n    >\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"outlet_id\"\n          style=\"width: 130px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"outlet_name\"\n          style=\"width: 380px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"owner_name\"\n          style=\"width: 300px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"holding_no\"\n          style=\"width: 70px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"road_name\"\n          style=\"width: 100px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"block_no\"\n          style=\"width: 50px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"village\"\n          style=\"width: 180px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"union\"\n          style=\"width: 180px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"post_office\"\n          style=\"width: 180px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"market_code\"\n          style=\"width: 120px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"zone_code\"\n          style=\"width: 120px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"thana_code\"\n          style=\"width: 110px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"district_code\"\n          style=\"width: 100px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"outlet_type\"\n          style=\"width: 230px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"manager_name\"\n          style=\"width: 300px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"respondent_designation\"\n          style=\"width: 200px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"contact_no1\"\n          style=\"width: 140px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"contact_no2\"\n          style=\"width: 140px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"contact_no3\"\n          style=\"width: 140px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"total_staff\"\n          style=\"width: 45px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"outlet_landmark\"\n          style=\"width: 400px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"gps_lat\"\n          style=\"width: 100px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"gps_long\"\n          style=\"width: 100px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"storage_capacity\"\n          style=\"width: 70px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"front_length\"\n          style=\"width: 60px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"front_width\"\n          style=\"width: 60px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"weekly_holiday\"\n          style=\"width: 40px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"nid\"\n          style=\"width: 140px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"survey_by\"\n          style=\"width: 300px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"entry_by\"\n          style=\"width: 300px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"visit_date\"\n          style=\"width: 150px\"\n        />\n      </div>\n      <div class=\"td\">\n        <button\n          type=\"submit\"\n          class=\"btn\"\n          [disabled]=\"fg.invalid\"\n          [ngClass]=\"\n            fg.get('incremented_outlet_id').value == 0\n              ? 'btn-success'\n              : 'btn-outline-dark'\n          \"\n          style=\"width: 130px\"\n        >\n          <i class=\"far fa-save fa-lg\"></i>\n          {{ fg.get(\"incremented_outlet_id\").value == 0 ? \"Create\" : \"Update\" }}\n        </button>\n        <button\n          class=\"btn btn-light ml-1\"\n          (click)=\"onDelete(fg.get('incremented_outlet_id').value, i)\"\n        >\n          <i class=\"far fa-trash-alt fa-lg text-danger\"></i>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ZoneService } from 'src/app/services/zone.service';\nimport { ColumnApi, GridApi } from 'ag-grid-community';\n\n@Component({\n  selector: 'app-zone-grid',\n  templateUrl: './zone-grid.component.html',\n  styleUrls: ['./zone-grid.component.scss'],\n})\nexport class ZoneGridComponent implements OnInit {\n  rowData: any;\n  columnDefs: any;\n\n  private api!: GridApi;\n  private columnApi!: ColumnApi;\n  router: any;\n\n  constructor(private zoneservice: ZoneService) {\n    this.columnDefs = this.createColumnDefs();\n  }\n\n  ngOnInit(): void {\n    this.zoneservice.getZone().subscribe(\n      (zones) => {\n        this.rowData = zones;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  onGridReady(params: { api: GridApi; columnApi: ColumnApi }): void {\n    this.api = params.api;\n    this.columnApi = params.columnApi;\n\n    // this.api.sizeColumnsToFit();\n  }\n\n  private createColumnDefs() {\n    return [\n      {\n        headerName: 'Zone Code',\n        field: 'zone_code',\n        editable: true,\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Zone Name',\n        field: 'zone_name',\n        editable: true,\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n    ];\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"example-toolbar\">\n  <h1 class=\"example-app-name\" routerLink=\"/main\">Crown RPBD</h1>\n</mat-toolbar>\n<ag-grid-angular\n  style=\"width: 100%; height: 1000px\"\n  class=\"ag-theme-alpine\"\n  (gridReady)=\"onGridReady($event)\"\n  [columnDefs]=\"columnDefs\"\n  [rowData]=\"rowData\"\n>\n</ag-grid-angular>\n","<mat-toolbar color=\"primary\" class=\"example-toolbar\">\r\n  <h1 class=\"example-app-name\" routerLink=\"/main\">Crown RPBD</h1>\r\n</mat-toolbar>\r\n<app-district-view></app-district-view>\r\n<button (click)=\"loadaddform()\">add district</button>\r\n<app-add-district *ngIf=\"add_district\"></app-add-district>\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { DistrictService } from '../../services/district.service';\nimport { DistrictViewComponent } from './district-view/district-view.component';\n\n@Component({\n  selector: 'app-district',\n  templateUrl: './district.component.html',\n  styleUrls: ['./district.component.scss'],\n})\nexport class DistrictComponent implements OnInit {\n  [districts: string]: any;\n\n  public add_district = false;\n\n  @Input() districts: any = [];\n\n  loadaddform() {\n    this.add_district = true;\n  }\n\n  constructor(private districtservice: DistrictService) {}\n\n  ngOnInit(): void {\n    this.districtservice.getDistrict().subscribe(\n      (data) => {\n        this.districts = data;\n        console.log(data);\n      },\n      (error) => console.log(error)\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BrowserStack } from 'protractor/built/driverProviders';\nimport { MarketService } from 'src/app/services/market-point.service';\n\n@Component({\n  selector: 'app-market-create',\n  templateUrl: './market-create.component.html',\n  styleUrls: ['./market-create.component.scss'],\n})\nexport class MarketCreateComponent implements OnInit {\n  marketForms: FormArray = this.fb.array([]);\n  notification: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private marketservice: MarketService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  addMarketForm() {\n    this.marketForms.push(\n      this.fb.group({\n        market_code: ['', Validators.required],\n        market_name: [''],\n      })\n    );\n  }\n\n  marketSubmit(fg: FormGroup) {\n    this.marketservice.createMarket(fg.value).subscribe((res: any) => {\n      fg.patchValue({ brand_code: res.brand_code });\n      this.showNotification('insert');\n    });\n  }\n\n  showNotification(category: any) {\n    switch (category) {\n      case 'insert':\n        this.notification = { class: 'text-success', message: 'saved!' };\n        break;\n\n      default:\n        break;\n    }\n    setTimeout(() => {\n      this.notification = null;\n    }, 2000);\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"example-toolbar\">\n  <h1 class=\"example-app-name\" routerLink=\"/main\">Crown RPBD</h1>\n</mat-toolbar>\n<div class=\"grid-Table\">\n  <div class=\"thead\">\n    <div class=\"tr\">\n      <div class=\"td\">Market Code</div>\n      <div class=\"td\">Market Name</div>\n\n      <div class=\"td\">\n        <button\n          class=\"btn btn-outline-success\"\n          (click)=\"addMarketForm()\"\n          style=\"width: 180px\"\n        >\n          <i class=\"fa fa-plus\"></i> New Market\n        </button>\n      </div>\n      <div class=\"td\">\n        action\n        <span *ngIf=\"notification\" class=\"elementToFadeInAndOut\">\n          <i class=\"fas fa-check-circle {{ notification.class }}\"></i>\n          {{ notification.message }}\n        </span>\n      </div>\n    </div>\n  </div>\n  <div class=\"tbody\">\n    <form\n      class=\"tr\"\n      [formGroup]=\"fg\"\n      *ngFor=\"let fg of marketForms.controls\"\n      (submit)=\"marketSubmit(fg)\"\n    >\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"market_code\"\n          style=\"width: 140px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"market_name\"\n          style=\"width: 250px\"\n        />\n      </div>\n\n      <div class=\"td\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-success\"\n          [disabled]=\"fg.invalid\"\n          style=\"width: 130px\"\n        >\n          <i class=\"far fa-save fa-lg\"></i> Submit\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Division } from '../../../model/division';\nimport {\n  FormControl,\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { DistrictService } from '../../../services/district.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-district',\n  templateUrl: './add-district.component.html',\n  styleUrls: ['./add-district.component.scss'],\n})\nexport class AddDistrictComponent implements OnInit {\n  districtform = new FormGroup({\n    district_code: new FormControl(''),\n    district_name: new FormControl(''),\n  });\n\n  constructor(\n    private districtservice: DistrictService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {}\n\n  addDistrict = () => {\n    console.log(this.districtform.value);\n    this.districtservice\n      .createDistrict(\n        this.districtform.value.district_code,\n        this.districtform.value.district_name\n      )\n      .subscribe(\n        (result) => console.log(result),\n        (error) => console.log(error)\n      );\n  };\n}\n","<form [formGroup]=\"districtform\" (ngSubmit)=\"addDistrict()\">\n  <label\n    >District Code <input type=\"text\" formControlName=\"district_code\" /><br />\n  </label>\n\n  <label\n    >District Name <input type=\"text\" formControlName=\"district_name\" /><br />\n  </label>\n\n  <button type=\"submit\">Submit</button>\n</form>\n\n{{ districtform.value | json }}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MerchandiseService {\r\n  baseUrl = 'http://127.0.0.1:8000/api/merchandising-grid/';\r\n  createUrl = 'http://127.0.0.1:8000/api/merchandising-create/';\r\n  updateUrl = 'http://127.0.0.1:8000/api/merchandising-update/';\r\n\r\n  httpheaders = {\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getMerchandise() {\r\n    return this.httpClient.get(this.baseUrl);\r\n  }\r\n\r\n  // createMerchandise(formData: any) {\r\n  //   return this.httpClient.post(this.createUrl, formData);\r\n  // }\r\n  // // createMerchandise(outlet_id: string, visit_month: string) {\r\n  // //   const body = JSON.stringify({ outlet_id, visit_month });\r\n  // //   return this.httpClient.post(this.createUrl, body, this.httpheaders);\r\n  // // }\r\n\r\n  // updateMerchandise(formData: any) {\r\n  //   return this.httpClient.put(this.updateUrl + formData.id, formData);\r\n  // }\r\n\r\n  // deleteMerchandise(id: any) {\r\n  //   return this.httpClient.delete(this.updateUrl + id);\r\n  // }\r\n  // createMerchandise(outlet_id: string, visit_month: string, brands: string) {\r\n  //   const body = JSON.stringify({ outlet_id, visit_month, brands });\r\n  //   return this.httpClient.post(this.createUrl, body, this.httpheaders);\r\n  // }\r\n  createMerchandise(formData: any) {\r\n    return this.httpClient.post(this.createUrl, formData);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ColumnApi, GridApi } from 'ag-grid-community';\nimport { OverallMokamService } from 'src/app/services/overallmokam.service';\nimport 'ag-grid-enterprise';\n@Component({\n  selector: 'app-overallmokamsummaryreport',\n  templateUrl: './overallmokamsummaryreport.component.html',\n  styleUrls: ['./overallmokamsummaryreport.component.scss'],\n})\nexport class OverallmokamsummaryreportComponent implements OnInit {\n  overallMokamRowData: any;\n  overallMokamColumnDefs: any;\n\n  crownOverallMokamRowData: any;\n  crownOverallMokamColumnDefs: any;\n\n  leadningBrandOverallMokamRowData: any;\n  leadingBrandOverallMokamColumnDefs: any;\n\n  private api!: GridApi;\n  private columnApi!: ColumnApi;\n  router: any;\n\n  constructor(private overallmokaservice: OverallMokamService) {\n    this.overallMokamColumnDefs = this.OverallMokamDetailsReport();\n    this.crownOverallMokamColumnDefs = this.OverallCrownMokamDetailsReport();\n    this.leadingBrandOverallMokamColumnDefs = this.OverallLeadingMokamReport();\n  }\n\n  ngOnInit(): void {\n    this.overallmokaservice.getMokamSummaryReport().subscribe(\n      (overallmokamreports) => {\n        this.overallMokamRowData = overallmokamreports;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n\n    this.overallmokaservice.getCrownMokamSummaryReport().subscribe(\n      (crownoverallmokamreports) => {\n        this.crownOverallMokamRowData = crownoverallmokamreports;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n\n    this.overallmokaservice.getLeadingBrandMokamSummaryReport().subscribe(\n      (leadingoverallmokamreports) => {\n        this.leadningBrandOverallMokamRowData = leadingoverallmokamreports;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  onGridReady(params: { api: GridApi; columnApi: ColumnApi }): void {\n    this.api = params.api;\n    this.columnApi = params.columnApi;\n  }\n\n  private OverallMokamDetailsReport() {\n    return [\n      {\n        headerName: 'District Name',\n        field: 'district_name',\n        resizable: true,\n        filter: true,\n        rowGroup: true,\n      },\n      {\n        headerName: 'Thana Name',\n        field: 'thana_name',\n        resizable: true,\n        sortable: true,\n        rowGroup: true,\n      },\n      {\n        headerName: 'Month',\n        field: 'end_month',\n        filter: true,\n        resizable: true,\n      },\n\n      {\n        headerName: 'Market Name',\n        field: 'market_name',\n        filter: true,\n        resizable: true,\n      },\n      {\n        headerName: 'Total Retail',\n        field: 'total_retail',\n        resizable: true,\n        sortable: true,\n        aggFunc: 'sum',\n        valueParser: 'Number(newValue)',\n      },\n      {\n        headerName: 'Market Size',\n        field: 'Market_Size',\n        sortable: true,\n        aggFunc: 'sum',\n        valueParser: 'Number(newValue)',\n      },\n    ];\n  }\n\n  private OverallCrownMokamDetailsReport() {\n    return [\n      {\n        headerName: 'District',\n        field: 'district_name',\n        filter: true,\n        rowGroup: true,\n      },\n      {\n        headerName: 'Thana',\n        field: 'thana_name',\n        filter: true,\n        resizable: true,\n        rowGroup: true,\n      },\n\n      {\n        headerName: 'Mokam',\n        field: 'market_name',\n        resizable: true,\n      },\n      {\n        headerName: 'Month',\n        field: 'end_month',\n        resizable: true,\n        filter: true,\n      },\n      {\n        headerName: 'Retail',\n        field: 'crown_retail',\n        resizable: true,\n        sortable: true,\n        aggFunc: 'sum',\n        valueParser: 'Number(newValue)',\n      },\n\n      {\n        headerName: 'Sales',\n        field: 'crown_sales',\n        resizable: true,\n        sortable: true,\n        aggFunc: 'sum',\n        valueParser: 'Number(newValue)',\n      },\n\n      {\n        headerName: 'Share',\n        field: 'Crown_Share',\n        resizable: true,\n        sortable: true,\n      },\n    ];\n  }\n\n  private OverallLeadingMokamReport() {\n    return [\n      {\n        headerName: 'District Name',\n        field: 'district_name',\n        rowGroup: true,\n        resizable: true,\n        filter: true,\n      },\n      {\n        headerName: 'Thana',\n        field: 'thana_name',\n        filter: true,\n        rowGroup: true,\n        resizable: true,\n      },\n\n      {\n        headerName: 'Market',\n        field: 'market_name',\n        resizable: true,\n        filter: true,\n      },\n      {\n        headerName: 'Month',\n        field: 'end_month',\n        resizable: true,\n        filter: true,\n      },\n\n      {\n        headerName: 'Brand',\n        field: 'brand_name',\n        resizable: true,\n        filter: true,\n      },\n\n      {\n        headerName: 'Retail',\n        field: 'LeadingBrandRetail',\n        resizable: true,\n        sortable: true,\n        aggFunc: 'sum',\n        valueParser: 'Number(newValue)',\n      },\n\n      {\n        headerName: 'Sales',\n        field: 'LeadingBrandSales',\n        resizable: true,\n        sortable: true,\n        aggFunc: 'sum',\n        valueParser: 'Number(newValue)',\n      },\n\n      {\n        headerName: 'Share',\n        field: 'Leading_brand_share',\n        resizable: true,\n        sortable: true,\n      },\n    ];\n  }\n}\n","<app-header></app-header>\n\n<header class=\"header\">\n  <h1>Overall Mokam Report</h1>\n</header>\n\n<h2>Mokam Summary</h2>\n\n<ag-grid-angular\n  style=\"width: 100%; height: 600px; align-items: center\"\n  class=\"ag-theme-alpine\"\n  (gridReady)=\"onGridReady($event)\"\n  [columnDefs]=\"overallMokamColumnDefs\"\n  [rowData]=\"overallMokamRowData\"\n  [groupIncludeTotalFooter]=\"true\"\n>\n</ag-grid-angular>\n\n<h2>Crown Summary</h2>\n\n<ag-grid-angular\n  style=\"width: 100%; height: 800px; align-items: center\"\n  class=\"ag-theme-alpine\"\n  (gridReady)=\"onGridReady($event)\"\n  [columnDefs]=\"crownOverallMokamColumnDefs\"\n  [rowData]=\"crownOverallMokamRowData\"\n  [groupIncludeTotalFooter]=\"true\"\n>\n</ag-grid-angular>\n\n<h2>Leading Brand Summary</h2>\n\n<ag-grid-angular\n  style=\"width: 100%; height: 800px; align-items: center\"\n  class=\"ag-theme-alpine\"\n  (gridReady)=\"onGridReady($event)\"\n  [columnDefs]=\"leadingBrandOverallMokamColumnDefs\"\n  [rowData]=\"leadningBrandOverallMokamRowData\"\n  [groupIncludeTotalFooter]=\"true\"\n>\n</ag-grid-angular>\n","import { Component, OnInit } from '@angular/core';\nimport { DistrictRetailsReportService } from 'src/app/services/districtretailsreports.service';\nimport { ColumnApi, GridApi } from 'ag-grid-community';\nimport 'ag-grid-enterprise';\n\n@Component({\n  selector: 'app-districtretails',\n  templateUrl: './districtretails.component.html',\n  styleUrls: ['./districtretails.component.scss'],\n})\nexport class DistrictretailsComponent implements OnInit {\n  startretailsrowData: any;\n  startretailscolumnDefs: any;\n\n  endretailsrowData: any;\n  endretailscolumnDefs: any;\n\n  private api!: GridApi;\n  private columnApi!: ColumnApi;\n  router: any;\n\n  constructor(private dsretailservice: DistrictRetailsReportService) {\n    this.endretailscolumnDefs = this.DistrictEndRetailsReport();\n    this.startretailscolumnDefs = this.DistrictStartRetailsReport();\n  }\n\n  ngOnInit(): void {\n    this.dsretailservice.getDistrictEndRetailsReport().subscribe(\n      (districtendretailsreport) => {\n        this.endretailsrowData = districtendretailsreport;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n\n    this.dsretailservice.getDistrictStartRetailsReport().subscribe(\n      (districtstartretailreport) => {\n        this.startretailsrowData = districtstartretailreport;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  onGridReady(params: { api: GridApi; columnApi: ColumnApi }): void {\n    this.api = params.api;\n    this.columnApi = params.columnApi;\n  }\n\n  private DistrictEndRetailsReport() {\n    return [\n      {\n        headerName: 'End Month Retail Counts',\n        children: [\n          {\n            headerName: 'District Name',\n            field: 'district_name',\n            filter: true,\n            resizable: true,\n            sortable: true,\n            rowGroup: true,\n          },\n          {\n            headerName: 'Brand Name',\n            field: 'brand_name',\n            filter: true,\n            resizable: true,\n            sortable: true,\n          },\n          {\n            headerName: 'Month',\n            field: 'end_month',\n            resizable: true,\n          },\n          {\n            headerName: 'Retails',\n            field: 'end_retail_counts',\n            resizable: true,\n            sortable: true,\n            aggFunc: 'sum',\n            valueParser: 'valueParser(newValue)',\n          },\n        ],\n      },\n    ];\n  }\n  private DistrictStartRetailsReport() {\n    return [\n      {\n        headerName: 'Start Month Retail Counts',\n        children: [\n          {\n            headerName: 'District Name',\n            field: 'district_name',\n            filter: true,\n            resizable: true,\n            sortable: true,\n            rowGroup: true,\n          },\n          {\n            headerName: 'Brand Name',\n            field: 'brand_name',\n            filter: true,\n            resizable: true,\n            sortable: true,\n          },\n          {\n            headerName: 'Month',\n            field: 'start_month',\n            resizable: true,\n          },\n          {\n            headerName: 'Retails',\n            field: 'start_retail_counts',\n            resizable: true,\n            sortable: true,\n            aggFunc: 'sum',\n            valueParser: 'newValue(Number)',\n          },\n        ],\n      },\n    ];\n  }\n}\n","<app-header></app-header>\n\n<header class=\"header\">\n  <h1>Month-wise District Retails Count Report</h1>\n</header>\n\n<div class=\"row\">\n  <div class=\"column\">\n    <ag-grid-angular\n      style=\"width: 100%; height: 100%; justify-content: center\"\n      class=\"ag-theme-alpine\"\n      (gridReady)=\"onGridReady($event)\"\n      [columnDefs]=\"endretailscolumnDefs\"\n      [rowData]=\"endretailsrowData\"\n      [groupIncludeTotalFooter]=\"true\"\n    >\n    </ag-grid-angular>\n  </div>\n\n  <div class=\"column\">\n    <ag-grid-angular\n      style=\"width: 100%; height: 100%; justify-content: center\"\n      class=\"ag-theme-alpine\"\n      (gridReady)=\"onGridReady($event)\"\n      [columnDefs]=\"startretailscolumnDefs\"\n      [rowData]=\"startretailsrowData\"\n      [groupIncludeTotalFooter]=\"true\"\n    >\n    </ag-grid-angular>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Division } from '../model/division';\nimport { stringify } from '@angular/compiler/src/util';\n// import 'rxjs/add/operator/do';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DivisionService {\n  baseUrl = 'http://127.0.0.1:8000/api/division-list/';\n  \n\n  httpheaders = {\n    headers: { 'Content-Type': 'application/json' },\n  };\n\n  constructor(private httpClient: HttpClient) {}\n\n  getDivisions() {\n    return this.httpClient.get(this.baseUrl);\n  }\n\n  createDivision(division_code: string, division_name: string) {\n    const body = JSON.stringify({ division_code, division_name });\n    return this.httpClient.post(this.baseUrl, body, this.httpheaders);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>authentication goes here</p>\n","import {Component, OnInit} from '@angular/core';\nimport {ColDef, ColumnApi, GridApi} from 'ag-grid-community';\nimport {DistrictService} from '../services/district.service';\nimport {District} from '../model/district';\n\n\n@Component({\n    selector: 'app-grid',\n    templateUrl: './grid.component.html',\n    styleUrls: ['./grid.component.scss']\n})\nexport class GridComponent implements OnInit {\n    // row data and column definitions\n    // row data and column definitions\n    rowData : any;\n    columnDefs : any;\n    \n\n    // gridApi and columnApi\n    private api!: GridApi;\n    private columnApi!: ColumnApi;\n\n    // inject the athleteService\n    constructor(private districtservice: DistrictService) {\n        this.columnDefs = this.createColumnDefs();\n    }\n\n    // on init, subscribe to the athelete data\n    ngOnInit() {\n        this.districtservice.getDistrict().subscribe(\n            districts => {\n                this.rowData = districts\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    // one grid initialisation, grap the APIs and auto resize the columns to fit the available space\n    onGridReady(params: { api: GridApi; columnApi: ColumnApi; }): void {\n        this.api = params.api;\n        this.columnApi = params.columnApi;\n\n        this.api.sizeColumnsToFit();\n    }\n\n    // create some simple column definitions\n    private createColumnDefs() {\n        return [\n          {headerName:\"District Code\" ,\n           field: 'district_code', \n           editable: true, \n           filter: true, \n           resizable: true, \n           sortable:true },\n          \n          {headerName:'District Name',\n           field: 'district_name',\n           filter: true,\n           resizable: true,\n           sortable: true\n          }\n            \n        ]\n    }\n}","<ag-grid-angular style=\"width: 100%; height: 800px;\"\n                 class=\"ag-theme-alpine\"\n                 (gridReady)=\"onGridReady($event)\"\n                 [columnDefs]=\"columnDefs\"\n                 [rowData]=\"rowData\"\n                 [pagination] = \"true\"\n                 [paginationAutoPageSize] = \"true\">               \n</ag-grid-angular>","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MarketService } from 'src/app/services/market-point.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-market-update',\n  templateUrl: './market-update.component.html',\n  styleUrls: ['./market-update.component.scss'],\n})\nexport class MarketUpdateComponent implements OnInit {\n  marketForms: FormArray = this.fb.array([]);\n  notification: any;\n  constructor(\n    private fb: FormBuilder,\n    private marketservice: MarketService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.marketservice.getMarket().subscribe((res) => {\n      if (res == []) this.addMarketForm();\n      else {\n        (res as []).forEach((market: any) => {\n          this.marketForms.push(\n            this.fb.group({\n              market_code: [market.market_code],\n              market_name: [market.market_name],\n            })\n          );\n        });\n      }\n    });\n  }\n\n  addMarketForm() {\n    this.marketForms.push(\n      this.fb.group({\n        market_code: ['', Validators.required],\n        market_name: ['', Validators.required],\n      })\n    );\n  }\n\n  marketUpdate(fg: FormGroup) {\n    this.marketservice.updateMarket(fg.value).subscribe((res: any) => {\n      this.showNotification('update');\n    });\n  }\n  onDelete(market_code: number, i: any) {\n    // if (brand_code == 0) this.brandForms.removeAt(i);\n    //else if (confirm('Do you want to delete this outlet?'))\n    this.marketservice.deleteMarket(market_code).subscribe((res) => {\n      confirm('Do you want to delete this market?');\n      this.marketForms.removeAt(i);\n      this.showNotification('delete');\n    });\n  }\n  showNotification(category: any) {\n    switch (category) {\n      case 'update':\n        this.notification = { class: 'text-primary', message: 'updated!' };\n        break;\n      case 'delete':\n        this.notification = { class: 'text-danger', message: 'deleted!' };\n        break;\n\n      default:\n        break;\n    }\n    setTimeout(() => {\n      this.notification = null;\n    }, 2000);\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"example-toolbar\">\n  <h1 class=\"example-app-name\" routerLink=\"/main\">Crown RPBD</h1>\n</mat-toolbar>\n<div class=\"grid-Table\">\n  <div class=\"thead\">\n    <div class=\"tr\">\n      <div class=\"td\">Market Code</div>\n      <div class=\"td\">Market Name</div>\n\n      <div class=\"td\">\n        action\n        <span *ngIf=\"notification\" class=\"elementToFadeInAndOut\">\n          <i class=\"fas fa-check-circle {{ notification.class }}\"></i>\n          {{ notification.message }}\n        </span>\n      </div>\n    </div>\n  </div>\n  <div class=\"tbody\">\n    <form\n      class=\"tr\"\n      [formGroup]=\"fg\"\n      *ngFor=\"let fg of marketForms.controls; let i = index\"\n      (submit)=\"marketUpdate(fg)\"\n    >\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"market_code\"\n          style=\"width: 130px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"market_name\"\n          style=\"width: 380px\"\n        />\n      </div>\n\n      <div class=\"td\">\n        <button type=\"submit\" class=\"btn\">\n          <i class=\"far fa-save fa-lg\"></i>\n          Update\n        </button>\n        <button\n          class=\"btn btn-light ml-1\"\n          (click)=\"onDelete(fg.get('market_code').value, i)\"\n        >\n          <i class=\"far fa-trash-alt fa-lg text-danger\"></i>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DistrictReportService {\r\n  districtsalesUrl = 'http://127.0.0.1:8000/api/report/districtsalevolume';\r\n\r\n  httpheaders = {\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n\r\n  save: any;\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getDistrictReport() {\r\n    return this.httpClient.get(this.districtsalesUrl);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DistrictRetailsReportService {\r\n  districtendtretailsUrl =\r\n    'http://127.0.0.1:8000/api/report/districtendretails';\r\n  districtstartretailsUrl =\r\n    'http://127.0.0.1:8000/api/report/districtstartretails';\r\n\r\n  httpheaders = {\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n\r\n  save: any;\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getDistrictEndRetailsReport() {\r\n    return this.httpClient.get(this.districtendtretailsUrl);\r\n  }\r\n\r\n  getDistrictStartRetailsReport() {\r\n    return this.httpClient.get(this.districtstartretailsUrl);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ThanaSalesReportService } from 'src/app/services/thanasalesreport.service';\nimport { ColumnApi, GridApi } from 'ag-grid-community';\nimport 'ag-grid-enterprise';\n\n@Component({\n  selector: 'app-thanasales',\n  templateUrl: './thanasales.component.html',\n  styleUrls: ['./thanasales.component.scss'],\n})\nexport class ThanasalesComponent implements OnInit {\n  thanasalesrowData: any;\n  thanasalesColumnDefs: any;\n\n  private api!: GridApi;\n  private columnApi!: ColumnApi;\n  router: any;\n\n  constructor(private thanasalesreportservice: ThanaSalesReportService) {\n    this.thanasalesColumnDefs = this.ThanaSalesReport();\n  }\n\n  ngOnInit(): void {\n    this.thanasalesreportservice.getThanaSalesReport().subscribe(\n      (thanasalesreports) => {\n        this.thanasalesrowData = thanasalesreports;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  onGridReady(params: { api: GridApi; columnApi: ColumnApi }): void {\n    this.api = params.api;\n    this.columnApi = params.columnApi;\n  }\n\n  private ThanaSalesReport() {\n    return [\n      {\n        headerName: 'District Name',\n        field: 'district_name',\n        rowGroup: true,\n        hide: true,\n        filter: true,\n      },\n      {\n        headerName: 'Thana Name',\n        field: 'thana_name',\n        filter: true,\n        rowGroup: true,\n        groupHeader: 'Thana',\n        hide: true,\n      },\n      {\n        headerName: 'Brand Name',\n        field: 'brand_name',\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'End Month Sales Volume/Share',\n\n        children: [\n          {\n            headerName: 'MonthName',\n            field: 'end_month',\n          },\n          {\n            headerName: 'Sales',\n            field: 'volume_end',\n            sortable: true,\n            resizable: true,\n            aggFunc: 'sum',\n            valueParser: 'Number(newValue)',\n          },\n          {\n            headerName: 'Share',\n            field: 'end_month_ms',\n            sortable: true,\n            resizable: true,\n          },\n        ],\n      },\n      {\n        headerName: 'Start Month Sales/Share',\n\n        children: [\n          {\n            headerName: 'Month',\n            field: 'start_month',\n          },\n          {\n            headerName: 'Sales',\n            field: 'volume_start',\n            sortable: true,\n            resizable: true,\n            aggFunc: 'sum',\n            valueParser: 'Number(newValue)',\n          },\n          {\n            headerName: 'Share',\n            field: 'start_month_ms',\n            sortable: true,\n            resizable: true,\n          },\n        ],\n      },\n    ];\n  }\n}\n","<app-header></app-header>\n\n<header class=\"header\">\n  <h1>District & Month-wise Thana Sales Report</h1>\n</header>\n\n<ag-grid-angular\n  style=\"width: 100%; height: 100%; justify-content: center\"\n  class=\"ag-theme-alpine\"\n  (gridReady)=\"onGridReady($event)\"\n  [columnDefs]=\"thanasalesColumnDefs\"\n  [rowData]=\"thanasalesrowData\"\n  [groupIncludeTotalFooter]=\"true\"\n>\n</ag-grid-angular>\n","<mat-toolbar color=\"primary\" class=\"example-toolbar\">\n  <h1 class=\"example-app-name\" routerLink=\"/main\">Crown RPBD</h1>\n</mat-toolbar>\n<app-thana-view></app-thana-view>\n<button (click)=\"loadaddform()\">add thana</button>\n<app-add-thana *ngIf=\"add_thana\"></app-add-thana>\n","import {\n  Component,\n  OnInit,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { ThanaService } from '../../services/thana.service';\n// import { ThanaViewComponent } from './division-view/division-view.component';\nimport { ThanaViewComponent } from './thana-view/thana-view.component';\nimport { AddThanaComponent } from './add-thana/add-thana.component';\n// import { AddDivisionComponent } from './add-division/add-division.component';\n\n@Component({\n  selector: 'app-thana',\n  templateUrl: './thana.component.html',\n  styleUrls: ['./thana.component.scss'],\n})\nexport class ThanaComponent implements OnInit {\n  public add_thana = false;\n\n  @Input() thanas: any = [];\n\n  loadaddform() {\n    this.add_thana = true;\n  }\n\n  constructor(private thanaservice: ThanaService) {}\n\n  ngOnInit(): void {\n    this.thanaservice.getThana().subscribe(\n      (data) => {\n        this.thanas = data;\n        console.log(data);\n      },\n      (error) => console.log(error)\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BrowserStack } from 'protractor/built/driverProviders';\nimport { BrandService } from 'src/app/services/brand.service';\n\n@Component({\n  selector: 'app-brand-create',\n  templateUrl: './brand-create.component.html',\n  styleUrls: ['./brand-create.component.scss'],\n})\nexport class BrandCreateComponent implements OnInit {\n  brandForms: FormArray = this.fb.array([]);\n  notification: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private brandservice: BrandService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  addBrandForm() {\n    this.brandForms.push(\n      this.fb.group({\n        brand_code: ['', Validators.required],\n        brand_name: [''],\n        company_name: [],\n      })\n    );\n  }\n\n  brandSubmit(fg: FormGroup) {\n    this.brandservice.createBrand(fg.value).subscribe((res: any) => {\n      fg.patchValue({ brand_code: res.brand_code });\n      this.showNotification('insert');\n    });\n  }\n\n  showNotification(category: any) {\n    switch (category) {\n      case 'insert':\n        this.notification = { class: 'text-success', message: 'saved!' };\n        break;\n\n      default:\n        break;\n    }\n    setTimeout(() => {\n      this.notification = null;\n    }, 2000);\n  }\n}\n","<div class=\"grid-Table\">\n  <div class=\"thead\">\n    <div class=\"tr\">\n      <div class=\"td\">Brand Code</div>\n      <div class=\"td\">Brand Name</div>\n      <div class=\"td\">Company Name</div>\n\n      <div class=\"td\">\n        <button\n          class=\"btn btn-outline-success\"\n          (click)=\"addBrandForm()\"\n          style=\"width: 180px\"\n        >\n          <i class=\"fa fa-plus\"></i> New Brand\n        </button>\n      </div>\n      <div class=\"td\">\n        action\n        <span *ngIf=\"notification\" class=\"elementToFadeInAndOut\">\n          <i class=\"fas fa-check-circle {{ notification.class }}\"></i>\n          {{ notification.message }}\n        </span>\n      </div>\n    </div>\n  </div>\n  <div class=\"tbody\">\n    <form\n      class=\"tr\"\n      [formGroup]=\"fg\"\n      *ngFor=\"let fg of brandForms.controls\"\n      (submit)=\"brandSubmit(fg)\"\n    >\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"brand_code\"\n          style=\"width: 70px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"brand_name\"\n          style=\"width: 250px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"company_name\"\n          style=\"width: 380px\"\n        />\n      </div>\n\n      <div class=\"td\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-success\"\n          [disabled]=\"fg.invalid\"\n          style=\"width: 130px\"\n        >\n          <i class=\"far fa-save fa-lg\"></i> Submit\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Brand } from './/../model/brand';\nimport { stringify } from '@angular/compiler/src/util';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BrandService {\n  public brand!: Brand;\n\n  gridUrl = 'http://127.0.0.1:8000/api/brand-grid/';\n  createUrl = 'http://127.0.0.1:8000/api/brand-create/';\n  updateUrl = 'http://127.0.0.1:8000/api/brand-update/';\n\n  httpheaders = {\n    headers: { 'Content-Type': 'application/json' },\n  };\n\n  constructor(private httpClient: HttpClient) {}\n\n  getBrand() {\n    return this.httpClient.get(this.gridUrl);\n  }\n\n  createBrand(formData: any) {\n    return this.httpClient.post(this.createUrl, formData);\n  }\n\n  updateBrand(formData: any) {\n    return this.httpClient.put(this.updateUrl + formData.brand_code, formData);\n  }\n  deleteBrand(brand_code: any) {\n    return this.httpClient.delete(this.updateUrl + brand_code);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MerchandiseService } from 'src/app/services/merchandising.service';\n\n@Component({\n  selector: 'app-merch-create',\n  templateUrl: './merch-create.component.html',\n  styleUrls: ['./merch-create.component.scss'],\n})\nexport class MerchCreateComponent implements OnInit {\n  submitted = false;\n\n  merchForm = new FormGroup({\n    outlet_id: new FormControl('', Validators.required),\n    visit_month: new FormControl(''),\n    brands: this.fb.array([]),\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private merchservice: MerchandiseService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    // this.merchForm = this.fb.group({\n    //   outlet_id: '',\n    //   visit_month: '',\n    //   brands: this.fb.array([]),\n    // });\n  }\n\n  brands(): FormArray {\n    return this.merchForm.get('brands') as FormArray;\n  }\n\n  newBrands(): FormGroup {\n    return this.fb.group({\n      brand_code: ['', Validators.required],\n      merchandising_tools: '',\n      quantity: '',\n    });\n  }\n\n  addBrand() {\n    this.brands().push(this.newBrands());\n  }\n\n  removeBrand(i: number) {\n    this.brands().removeAt(i);\n  }\n\n  // addMerch = () => {\n  //   console.log(this.merchForm.value);\n  //   this.merchservice\n  //     .createMerchandise(\n  //       this.merchForm.value.outlet_id,\n  //       this.merchForm.value.visit_month,\n  //       this.merchForm.value.brands\n  //     )\n  //     .subscribe(\n  //       (result) => console.log(result),\n  //       (error) => console.log(error)\n  //     );\n  // };\n\n  addMerch(data: FormData) {\n    this.merchservice.createMerchandise(data);\n  }\n\n  onSubmit() {\n    console.log(this.merchForm.value);\n  }\n}\n","<div class=\"container\">\n  <form [formGroup]=\"merchForm\" (ngsubmit)=\"addMerch(merchForm.value)\">\n    <p>\n      <label for=\"outletid\">Outlet ID:</label>\n      <input type=\"text\" formControlName=\"outlet_id\" class=\"form-control\" />\n    </p>\n    <p>\n      <label for=\"visitmonth\">Visit Month:</label>\n      <input type=\"text\" formControlName=\"visit_month\" class=\"form-control\" />\n    </p>\n\n    <table class=\"table table-bordered\" formArrayName=\"brands\">\n      <tr>\n        <th colspan=\"2\">Add Merchandising For Multiple Brands:</th>\n        <th width=\"150px\">\n          <button type=\"button\" (click)=\"addBrand()\" class=\"btn btn-primary\">\n            Add Brands\n          </button>\n        </th>\n      </tr>\n      <tr\n        *ngFor=\"let brand of brands().controls; let i = index\"\n        [formGroupName]=\"i\"\n      >\n        <td>\n          Brand Code :\n          <input\n            type=\"text\"\n            formControlName=\"brand_code\"\n            class=\"form-control\"\n          />\n        </td>\n        <td>\n          Merchandising Tools:\n          <input\n            type=\"text\"\n            formControlName=\"merchandising_tools\"\n            class=\"form-control\"\n          />\n        </td>\n        <td>\n          Quantity:\n          <input type=\"text\" formControlName=\"quantity\" class=\"form-control\" />\n        </td>\n        <td>\n          <button (click)=\"removeBrand(i)\" class=\"btn btn-danger\">\n            Remove\n          </button>\n        </td>\n      </tr>\n    </table>\n\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>\n\n{{ merchForm.value | json }}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OutletSalesReportService {\r\n  outletsalesUrl = 'http://127.0.0.1:8000/api/report/outletsalesvolume';\r\n\r\n  httpheaders = {\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n\r\n  save: any;\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getOutletSalesReport() {\r\n    return this.httpClient.get(this.outletsalesUrl);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ThanaRetailsReportService } from 'src/app/services/thanaretailsreports.service';\nimport { ColumnApi, GridApi } from 'ag-grid-community';\nimport 'ag-grid-enterprise';\n\n@Component({\n  selector: 'app-thanaretails',\n  templateUrl: './thanaretails.component.html',\n  styleUrls: ['./thanaretails.component.scss'],\n})\nexport class ThanaretailsComponent implements OnInit {\n  startretailsrowData: any;\n  startretailscolumnDefs: any;\n\n  endretailsrowData: any;\n  endretailscolumnDefs: any;\n\n  private api!: GridApi;\n  private columnApi!: ColumnApi;\n  router: any;\n\n  constructor(private thretailservice: ThanaRetailsReportService) {\n    this.endretailscolumnDefs = this.ThanaEndRetailsReport();\n    this.startretailscolumnDefs = this.ThanaStartRetailsReport();\n  }\n\n  ngOnInit(): void {\n    this.thretailservice.getThanaEndRetailsReport().subscribe(\n      (thanaendretailsreport) => {\n        this.endretailsrowData = thanaendretailsreport;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n\n    this.thretailservice.getThanaStartRetailsReport().subscribe(\n      (thanastartretailreport) => {\n        this.startretailsrowData = thanastartretailreport;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  onGridReady(params: { api: GridApi; columnApi: ColumnApi }): void {\n    this.api = params.api;\n    this.columnApi = params.columnApi;\n  }\n\n  private ThanaEndRetailsReport() {\n    return [\n      {\n        headerName: 'End Month Retail Counts',\n        children: [\n          {\n            headerName: 'District Name',\n            field: 'district_name',\n            rowGroup: true,\n            filter: true,\n          },\n          {\n            headerName: 'Thana Name',\n            field: 'thana_name',\n            rowGroup: true,\n            hide: true,\n          },\n          {\n            headerName: 'Brand Name',\n            field: 'brand_name',\n            filter: true,\n            resizablbe: true,\n            sortable: true,\n          },\n          {\n            headerName: 'Month',\n            field: 'end_month',\n            filter: true,\n            resizable: true,\n          },\n          {\n            headerName: 'Retail',\n            field: 'end_retail_counts',\n            sortable: true,\n            resizable: true,\n          },\n        ],\n      },\n    ];\n  }\n\n  private ThanaStartRetailsReport() {\n    return [\n      {\n        headerName: 'Start Month Retail Counts',\n        children: [\n          {\n            headerName: 'District Name',\n            field: 'district_name',\n            rowGroup: true,\n            filter: true,\n          },\n          {\n            headerName: 'Thana Name',\n            field: 'thana_name',\n            filter: true,\n            rowGroup: true,\n            hide: true,\n          },\n          {\n            headerName: 'Brand Name',\n            field: 'brand_name',\n            filter: true,\n            resizablbe: true,\n            sortable: true,\n          },\n          {\n            headerName: 'Month',\n            field: 'start_month',\n            filter: true,\n            resizable: true,\n          },\n          {\n            headerName: 'Retail',\n            field: 'start_retail_counts',\n            sortable: true,\n            resizable: true,\n          },\n        ],\n      },\n    ];\n  }\n}\n","<app-header></app-header>\n\n<header class=\"header\">\n  <h1>District & Month-wise Thana Retails Count Report</h1>\n</header>\n\n<div class=\"row\">\n  <div class=\"column\">\n    <ag-grid-angular\n      style=\"width: 100%; height: 100%; justify-content: center\"\n      class=\"ag-theme-alpine\"\n      (gridReady)=\"onGridReady($event)\"\n      [columnDefs]=\"endretailscolumnDefs\"\n      [rowData]=\"endretailsrowData\"\n      [groupIncludeTotalFooter]=\"true\"\n    >\n    </ag-grid-angular>\n  </div>\n\n  <div class=\"column\">\n    <ag-grid-angular\n      style=\"width: 100%; height: 100%; justify-content: center\"\n      class=\"ag-theme-alpine\"\n      (gridReady)=\"onGridReady($event)\"\n      [columnDefs]=\"startretailscolumnDefs\"\n      [rowData]=\"startretailsrowData\"\n      [groupIncludeTotalFooter]=\"true\"\n    >\n    </ag-grid-angular>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n//Service Components\nimport { DivisionService } from '../services/division.service';\nimport { DistrictService } from '../services/district.service';\nimport { ThanaService } from '../services/thana.service';\nimport { ZoneService } from '../services/zone.service';\nimport { MarketService } from '../services/market-point.service';\nimport { AddDivisionComponent } from './division/add-division/add-division.component';\nimport { AddDistrictComponent } from './district/add-district/add-district.component';\nimport { AddThanaComponent } from './thana/add-thana/add-thana.component';\n\n//App Components\nimport { DivisionComponent } from './division/division.component';\nimport { DistrictComponent } from './district/district.component';\nimport { ThanaComponent } from './thana/thana.component';\nimport { GridComponent } from '../grid/grid.component';\nimport { MainComponent } from './main.component';\nimport { DivisionViewComponent } from './division/division-view/division-view.component';\nimport { DistrictViewComponent } from './district/district-view/district-view.component';\nimport { ThanaViewComponent } from './thana/thana-view/thana-view.component';\nimport { ProfileGridComponent } from './profile-grid/profile-grid.component';\nimport { ProfileCrudComponent } from './profile-crud/profile-crud.component';\nimport { BrandGridComponent } from './brand-grid/brand-grid.component';\nimport { BrandCreateComponent } from './brand-create/brand-create.component';\nimport { BrandUpdateComponent } from './brand-update/brand-update.component';\nimport { ZoneGridComponent } from './zone-grid/zone-grid.component';\nimport { ZoneCreateComponent } from './zone-create/zone-create.component';\nimport { ZoneUpdateComponent } from './zone-update/zone-update.component';\nimport { MarketGridComponent } from './market-grid/market-grid.component';\nimport { MarketCreateComponent } from './market-create/market-create.component';\nimport { MarketUpdateComponent } from './market-update/market-update.component';\nimport { ProfileCreateComponent } from './profile-create/profile-create.component';\nimport { ProfileUpdateComponent } from './profile-update/profile-update.component';\nimport { TopNavComponent } from './top-nav/top-nav.component';\n\n//Angular Material Imports\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { ExpanPannelComponent } from './expan-pannel/expan-pannel.component';\nimport { MerchandisingGridComponent } from './merchandising-grid/merchandising-grid.component';\nimport { MerchandiseService } from '../services/merchandising.service';\nimport { MerchandisingCreateComponent } from './merchandising-create/merchandising-create.component';\nimport { MerchCreateComponent } from './merch-create/merch-create.component';\nimport { ReportComponent } from './report/report.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { ThanadetailreportComponent } from './reports/thanadetailreport/thanadetailreport/thanadetailreport.component';\nimport { Thanadetailservice } from '../services/thanadetailreport.service';\nimport { DistrictReportComponent } from './reports/districtsummaryreport/districtreport/districtreport.component';\nimport { DistrictretailsComponent } from './reports/districtsummaryreport/districtretails/districtretails/districtretails.component';\nimport { ThanasalesComponent } from './reports/thanasummaryreport/thanasalesreport/thanasales/thanasales.component';\nimport { ThanaretailsComponent } from './reports/thanaretails/thanaretails/thanaretails.component';\nimport { MarketSalesComponent } from './reports/marketsalessummary/market-sales/market-sales.component';\nimport { OutletsalesComponent } from './reports/outletsalesreport/outletsales/outletsales.component';\nimport { OverallmokamsummaryreportComponent } from './reports/overallmokamsummaryreport/overallmokamsummaryreport.component';\nimport { HeaderComponent } from './header/header.component';\nimport { SidenavComponent } from './sidenav/sidenav.component';\n\nconst routes: Routes = [\n  { path: 'main', component: MainComponent },\n  { path: 'top-nav', component: TopNavComponent },\n  { path: 'main/division', component: DivisionComponent },\n  { path: 'main/district-view', component: DistrictComponent },\n  { path: 'main/thana-view', component: ThanaComponent },\n  { path: 'main/add-division', component: AddDivisionComponent },\n  // { path: 'brand-grid', component: BrandGridComponent },\n  // { path: 'brand-create', component: BrandCreateComponent },\n  // { path: 'brand-update', component: BrandUpdateComponent },\n  {\n    path: 'brand',\n    children: [\n      { path: 'brand-grid', component: BrandGridComponent },\n      { path: 'brand-create', component: BrandCreateComponent },\n      { path: 'brand-update', component: BrandUpdateComponent },\n    ],\n  },\n  {\n    path: 'zone',\n    children: [\n      { path: 'zone-grid', component: ZoneGridComponent },\n      { path: 'zone-create', component: ZoneCreateComponent },\n      { path: 'zone-update', component: ZoneUpdateComponent },\n    ],\n  },\n  // { path: 'zone-grid', component: ZoneGridComponent },\n  // { path: 'zone-create', component: ZoneCreateComponent },\n  // { path: 'zone-update', component: ZoneUpdateComponent },\n  {\n    path: 'market',\n    children: [\n      { path: 'market-grid', component: MarketGridComponent },\n      { path: 'market-create', component: MarketCreateComponent },\n      { path: 'market-update', component: MarketUpdateComponent },\n    ],\n  },\n  // { path: 'market-grid', component: MarketGridComponent },\n  // { path: 'market-create', component: MarketCreateComponent },\n  // { path: 'market-update', component: MarketUpdateComponent },\n  {\n    path: 'profile',\n    children: [\n      { path: 'profile-grid', component: ProfileGridComponent },\n      { path: 'profile-create', component: ProfileCreateComponent },\n      { path: 'profile-update', component: ProfileUpdateComponent },\n    ],\n  },\n  // { path: 'profile-grid', component: ProfileGridComponent },\n  // { path: 'profile-create', component: ProfileCreateComponent },\n  // { path: 'profile-update', component: ProfileUpdateComponent },\n  {\n    path: 'merchandising',\n    children: [\n      { path: 'merchandising-grid', component: MerchandisingGridComponent },\n      { path: 'merchandising-create', component: MerchandisingCreateComponent },\n      //{ path: 'profile-update', component: ProfileUpdateComponent },\n    ],\n  },\n  // {\n  //   path: 'merchandising',\n  //   children: [\n\n  //     { path: 'merch-create', component: MerchCreateComponent }\n  // ],\n  // },\n  {\n    path: 'reports',\n    children: [\n      { path: 'overallthanareport', component: ThanadetailreportComponent },\n      { path: 'districtreport', component: DistrictReportComponent },\n      { path: 'districtretailsreport', component: DistrictretailsComponent },\n      { path: 'thanasalesrport', component: ThanasalesComponent },\n      { path: 'thanaretails', component: ThanaretailsComponent },\n      { path: 'mokamsalesreport', component: MarketSalesComponent },\n      {\n        path: 'outletsalesreport',\n        component: OutletsalesComponent,\n      },\n      {\n        path: 'overallmokamreports',\n        component: OverallmokamsummaryreportComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  declarations: [\n    MainComponent,\n    DistrictComponent,\n    DivisionComponent,\n    ThanaComponent,\n    GridComponent,\n    DivisionViewComponent,\n    AddDivisionComponent,\n    DistrictViewComponent,\n    ThanaViewComponent,\n    AddDistrictComponent,\n    AddThanaComponent,\n    ProfileGridComponent,\n    ProfileCrudComponent,\n    BrandGridComponent,\n    BrandCreateComponent,\n    BrandUpdateComponent,\n    ZoneGridComponent,\n    ZoneCreateComponent,\n    ZoneUpdateComponent,\n    MarketGridComponent,\n    MarketCreateComponent,\n    MarketUpdateComponent,\n    ProfileCreateComponent,\n    ProfileUpdateComponent,\n    TopNavComponent,\n    ExpanPannelComponent,\n    MerchandisingGridComponent,\n    MerchandisingCreateComponent,\n    MerchCreateComponent,\n    ReportComponent,\n    NavbarComponent,\n    ThanadetailreportComponent,\n    DistrictReportComponent,\n    DistrictretailsComponent,\n    ThanasalesComponent,\n    ThanaretailsComponent,\n    MarketSalesComponent,\n    OutletsalesComponent,\n    OverallmokamsummaryreportComponent,\n    HeaderComponent,\n    SidenavComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n    AgGridModule.withComponents(GridComponent),\n    MatSliderModule,\n    BrowserAnimationsModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    FlexLayoutModule,\n    MatDividerModule,\n    MatSidenavModule,\n    MatListModule,\n    MatExpansionModule,\n    FlexLayoutModule,\n  ],\n  exports: [MatSidenavModule, ReactiveFormsModule, MatTreeModule],\n  providers: [\n    DivisionService,\n    DistrictService,\n    ThanaService,\n    ZoneService,\n    MarketService,\n    MerchandiseService,\n  ],\n})\nexport class MainModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes,RouterModule } from '@angular/router';\n\n\n\nimport { AuthComponent } from './auth.component';\n\nconst routes: Routes = [\n  {path: 'auth', component: AuthComponent}\n];\n\n@NgModule({\n  declarations: [AuthComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports:\n  [\n    RouterModule\n  ],\n})\nexport class AuthModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { Routes, RouterModule, Router } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AgGridModule } from 'ag-grid-angular';\n\nimport { MainModule } from './main/main.module';\nimport { AuthModule } from './auth/auth.module';\n\nimport { AppComponent } from './app.component';\nimport { GridComponent } from './grid/grid.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\n\n// import { GridComponent } from './grid/grid.component';\n\nconst routes: Routes = [\n  //{path: '', pathMatch:'full', redirectTo:'home'}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n\n    // GridComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    AgGridModule,\n    MainModule,\n    AuthModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n    AgGridModule.withComponents([GridComponent]),\n    BrowserAnimationsModule,\n    MDBBootstrapModule.forRoot(),\n  ],\n  exports: [RouterModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BrowserStack } from 'protractor/built/driverProviders';\nimport { ZoneService } from 'src/app/services/zone.service';\n\n@Component({\n  selector: 'app-zone-create',\n  templateUrl: './zone-create.component.html',\n  styleUrls: ['./zone-create.component.scss'],\n})\nexport class ZoneCreateComponent implements OnInit {\n  zoneForms: FormArray = this.fb.array([]);\n  notification: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private zoneservice: ZoneService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  addZoneForm() {\n    this.zoneForms.push(\n      this.fb.group({\n        zone_code: ['', Validators.required],\n        zone_name: [''],\n      })\n    );\n  }\n\n  zoneSubmit(fg: FormGroup) {\n    this.zoneservice.createZone(fg.value).subscribe((res: any) => {\n      fg.patchValue({ zone_code: res.zone_code });\n      this.showNotification('insert');\n    });\n  }\n\n  showNotification(category: any) {\n    switch (category) {\n      case 'insert':\n        this.notification = { class: 'text-success', message: 'saved!' };\n        break;\n\n      default:\n        break;\n    }\n    setTimeout(() => {\n      this.notification = null;\n    }, 2000);\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"example-toolbar\">\n  <h1 class=\"example-app-name\" routerLink=\"/main\">Crown RPBD</h1>\n</mat-toolbar>\n<div class=\"grid-Table\">\n  <div class=\"thead\">\n    <div class=\"tr\">\n      <div class=\"td\">Zone Code</div>\n      <div class=\"td\">Zone Name</div>\n\n      <div class=\"td\">\n        <button\n          class=\"btn btn-outline-success\"\n          (click)=\"addZoneForm()\"\n          style=\"width: 180px\"\n        >\n          <i class=\"fa fa-plus\"></i> New Zone\n        </button>\n      </div>\n      <div class=\"td\">\n        action\n        <span *ngIf=\"notification\" class=\"elementToFadeInAndOut\">\n          <i class=\"fas fa-check-circle {{ notification.class }}\"></i>\n          {{ notification.message }}\n        </span>\n      </div>\n    </div>\n  </div>\n  <div class=\"tbody\">\n    <form\n      class=\"tr\"\n      [formGroup]=\"fg\"\n      *ngFor=\"let fg of zoneForms.controls\"\n      (submit)=\"zoneSubmit(fg)\"\n    >\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"zone_code\"\n          style=\"width: 140px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"zone_name\"\n          style=\"width: 250px\"\n        />\n      </div>\n\n      <div class=\"td\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-success\"\n          [disabled]=\"fg.invalid\"\n          style=\"width: 130px\"\n        >\n          <i class=\"far fa-save fa-lg\"></i> Submit\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { OutletSalesReportService } from 'src/app/services/outletsalesreport.service';\nimport { ColumnApi, GridApi } from 'ag-grid-community';\nimport 'ag-grid-enterprise';\n\n@Component({\n  selector: 'app-outletsales',\n  templateUrl: './outletsales.component.html',\n  styleUrls: ['./outletsales.component.scss'],\n})\nexport class OutletsalesComponent implements OnInit {\n  outletsalesrowData: any;\n  outletsalesColumnDefs: any;\n\n  private api!: GridApi;\n  private columnApi!: ColumnApi;\n  private gridApi!: GridApi;\n\n  router: any;\n\n  constructor(private outletsalesreportservice: OutletSalesReportService) {\n    this.outletsalesColumnDefs = this.OutletSalesReport();\n  }\n\n  ngOnInit(): void {\n    this.outletsalesreportservice.getOutletSalesReport().subscribe(\n      (outletsalesreport) => {\n        this.outletsalesrowData = outletsalesreport;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  onGridReady(params: { api: GridApi; columnApi: ColumnApi }): void {\n    this.api = params.api;\n    this.columnApi = params.columnApi;\n  }\n\n  private OutletSalesReport() {\n    return [\n      {\n        headerName: 'District Name',\n        field: 'district_name',\n        rowGroup: true,\n        filter: true,\n        resizable: true,\n      },\n      {\n        headerName: 'Thana Name',\n        field: 'thana_name',\n        rowGroup: true,\n      },\n\n      {\n        headerName: 'Mokam',\n        field: 'market_name',\n        rowGroup: true,\n      },\n\n      {\n        headerName: 'Outlet Name',\n        field: 'outlet_name',\n        filter: true,\n        resizable: true,\n      },\n\n      {\n        headerName: 'Brand',\n        field: 'brand_name',\n        filter: true,\n        resizable: true,\n      },\n\n      {\n        headerName: 'End Month Sales Volume/Share',\n\n        children: [\n          {\n            headerName: 'Month Name',\n            field: 'end_month',\n            filter: true,\n          },\n          {\n            headerName: 'Sales',\n            field: 'volume_end',\n            sortable: true,\n            resizable: true,\n            aggFunc: 'sum',\n            valueParser: 'Number(newValue)',\n          },\n          {\n            headerName: 'Share',\n            field: 'end_month_ms',\n            sortable: true,\n            resizable: true,\n          },\n        ],\n      },\n      {\n        headerName: 'Start Month Sales/Share',\n        children: [\n          {\n            headerName: 'Month Name',\n            field: 'start_month',\n            filter: true,\n          },\n          {\n            headerName: 'Sales',\n            field: 'volume_start',\n            sortable: true,\n            resizable: true,\n          },\n          {\n            headerName: 'Share',\n            field: 'start_month_ms',\n            sortable: true,\n            resizable: true,\n          },\n        ],\n      },\n    ];\n  }\n}\n","<app-header></app-header>\n<header class=\"header\">\n  <h1>District & Month-wise Outlet Sales Report</h1>\n</header>\n<ag-grid-angular\n  style=\"width: 100%; height: 100%; justify-content: center\"\n  id=\"myGrid\"\n  class=\"ag-theme-alpine\"\n  (gridReady)=\"onGridReady($event)\"\n  [columnDefs]=\"outletsalesColumnDefs\"\n  [rowData]=\"outletsalesrowData\"\n  [animateRows]=\"true\"\n  [groupIncludeTotalFooter]=\"true\"\n>\n</ag-grid-angular>\n","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ColDef, ColumnApi, GridApi } from 'ag-grid-community';\nimport { DivisionService } from '../../../services/division.service';\nimport { Division } from '../../../model/division';\n\n@Component({\n  selector: 'app-division-view',\n  templateUrl: './division-view.component.html',\n  styleUrls: ['./division-view.component.scss'],\n})\nexport class DivisionViewComponent implements OnInit {\n  // row data and column definitions\n  // row data and column definitions\n\n  rowData: any;\n  columnDefs: any;\n\n  // gridApi and columnApi\n  private api!: GridApi;\n  private columnApi!: ColumnApi;\n  router: any;\n\n  // @Output() new createNewDivision = new EventEmitter();\n\n  // inject the athleteService\n  constructor(private divisionservice: DivisionService) {\n    this.columnDefs = this.createColumnDefs();\n  }\n\n  // on init, subscribe to the athelete data\n  ngOnInit() {\n    this.divisionservice.getDivisions().subscribe(\n      (divisions) => {\n        this.rowData = divisions;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n\n    // newDivision(){\n    //     this.createNewDivision.emit();\n    // }\n  }\n\n  // one grid initialisation, grap the APIs and auto resize the columns to fit the available space\n  onGridReady(params: { api: GridApi; columnApi: ColumnApi }): void {\n    this.api = params.api;\n    this.columnApi = params.columnApi;\n\n    this.api.sizeColumnsToFit();\n  }\n\n  // create some simple column definitions\n  private createColumnDefs() {\n    return [\n      {\n        headerName: 'Division Code',\n        field: 'division_code',\n        editable: false,\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Division Name',\n        field: 'division_name',\n        filter: true,\n        resizable: true,\n        editable: true,\n        sortable: true,\n      },\n    ];\n  }\n}\n","<ag-grid-angular\n  style=\"width: 50%; height: 450px\"\n  class=\"ag-theme-alpine\"\n  (gridReady)=\"onGridReady($event)\"\n  [columnDefs]=\"columnDefs\"\n  [rowData]=\"rowData\"\n  [pagination]=\"true\"\n  [paginationAutoPageSize]=\"true\"\n>\n</ag-grid-angular>\n","<mat-toolbar color=\"primary\" class=\"example-toolbar\">\n  <button mat-icon-button (click)=\"isExpanded = !isExpanded\">\n    <mat-icon>menu</mat-icon>\n  </button>\n  <h1 class=\"example-app-name\" routerLink=\"/main\">Crown RPBD</h1>\n</mat-toolbar>\n<mat-sidenav-container class=\"example-container\" autosize>\n  <mat-sidenav\n    #sidenav\n    class=\"example-sidenav\"\n    mode=\"side\"\n    opened=\"true\"\n    (mouseenter)=\"mouseenter()\"\n    (mouseleave)=\"mouseleave()\"\n  >\n    <mat-nav-list>\n      <mat-list-item (click)=\"showSubmenu = !showSubmenu\" class=\"parent\">\n        <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\">Menu</span>\n        <mat-icon mat-list-icon>home</mat-icon>\n        <mat-icon\n          class=\"menu-button\"\n          [ngClass]=\"{ rotated: showSubmenu }\"\n          *ngIf=\"isExpanded || isShowing\"\n          >expand_more</mat-icon\n        >\n      </mat-list-item>\n      <div\n        class=\"submenu\"\n        [ngClass]=\"{ expanded: showSubmenu }\"\n        *ngIf=\"isShowing || isExpanded\"\n      >\n        <mat-list-item\n          (click)=\"showSubSubMenu = !showSubSubMenu\"\n          class=\"parent\"\n        >\n          <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\"\n            >Profile</span\n          >\n\n          <mat-icon\n            class=\"menu-button\"\n            [ngClass]=\"{ rotated: showSubSubMenu }\"\n            *ngIf=\"isExpanded || isShowing\"\n            >expand_more</mat-icon\n          >\n        </mat-list-item>\n        <div\n          class=\"submenu\"\n          [ngClass]=\"{ expanded: showSubSubMenu }\"\n          *ngIf=\"isShowing || isExpanded\"\n        >\n          <mat-list-item routerLink=\"/profile/profile-grid\"\n            >Profile Grid</mat-list-item\n          >\n          <mat-list-item routerLink=\"/profile/profile-create\"\n            >Profile Create</mat-list-item\n          >\n          <mat-list-item routerLink=\"/profile/profile-update\"\n            >Profile Update</mat-list-item\n          >\n        </div>\n      </div>\n      <div\n        class=\"submenu\"\n        [ngClass]=\"{ expanded: showSubmenu }\"\n        *ngIf=\"isShowing || isExpanded\"\n      >\n        <mat-list-item\n          (click)=\"showDivisionSubMenu = !showDivisionSubMenu\"\n          class=\"parent\"\n        >\n          <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\"\n            >Division</span\n          >\n\n          <mat-icon\n            class=\"menu-button\"\n            [ngClass]=\"{ rotated: showDivisionSubMenu }\"\n            *ngIf=\"isExpanded || isShowing\"\n            >expand_more</mat-icon\n          >\n        </mat-list-item>\n        <div\n          class=\"submenu\"\n          [ngClass]=\"{ expanded: showDivisionSubMenu }\"\n          *ngIf=\"isShowing || isExpanded\"\n        >\n          <mat-list-item routerLink=\"/main/division\"\n            >Division Grid</mat-list-item\n          >\n        </div>\n      </div>\n      <div\n        class=\"submenu\"\n        [ngClass]=\"{ expanded: showSubmenu }\"\n        *ngIf=\"isShowing || isExpanded\"\n      >\n        <mat-list-item\n          (click)=\"showDistrictSubMenu = !showDistrictSubMenu\"\n          class=\"parent\"\n        >\n          <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\"\n            >District</span\n          >\n\n          <mat-icon\n            class=\"menu-button\"\n            [ngClass]=\"{ rotated: showDistrictSubMenu }\"\n            *ngIf=\"isExpanded || isShowing\"\n            >expand_more</mat-icon\n          >\n        </mat-list-item>\n        <div\n          class=\"submenu\"\n          [ngClass]=\"{ expanded: showDistrictSubMenu }\"\n          *ngIf=\"isShowing || isExpanded\"\n        >\n          <mat-list-item routerLink=\"/main/district-view\"\n            >District Grid</mat-list-item\n          >\n        </div>\n      </div>\n      <div\n        class=\"submenu\"\n        [ngClass]=\"{ expanded: showSubmenu }\"\n        *ngIf=\"isShowing || isExpanded\"\n      >\n        <mat-list-item\n          (click)=\"showThanaSubMenu = !showThanaSubMenu\"\n          class=\"parent\"\n        >\n          <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\">Thana</span>\n\n          <mat-icon\n            class=\"menu-button\"\n            [ngClass]=\"{ rotated: showThanaSubMenu }\"\n            *ngIf=\"isExpanded || isShowing\"\n            >expand_more</mat-icon\n          >\n        </mat-list-item>\n        <div\n          class=\"submenu\"\n          [ngClass]=\"{ expanded: showThanaSubMenu }\"\n          *ngIf=\"isShowing || isExpanded\"\n        >\n          <mat-list-item routerLink=\"/main/thana-view\"\n            >Thana Grid</mat-list-item\n          >\n        </div>\n      </div>\n      <div\n        class=\"submenu\"\n        [ngClass]=\"{ expanded: showSubmenu }\"\n        *ngIf=\"isShowing || isExpanded\"\n      >\n        <mat-list-item\n          (click)=\"showZoneSubMenu = !showZoneSubMenu\"\n          class=\"parent\"\n        >\n          <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\">Zone</span>\n\n          <mat-icon\n            class=\"menu-button\"\n            [ngClass]=\"{ rotated: showZoneSubMenu }\"\n            *ngIf=\"isExpanded || isShowing\"\n            >expand_more</mat-icon\n          >\n        </mat-list-item>\n        <div\n          class=\"submenu\"\n          [ngClass]=\"{ expanded: showZoneSubMenu }\"\n          *ngIf=\"isShowing || isExpanded\"\n        >\n          <mat-list-item routerLink=\"/zone/zone-grid\">Zone Grid</mat-list-item>\n          <mat-list-item routerLink=\"/zone/zone-create\"\n            >Zone Create</mat-list-item\n          >\n          <mat-list-item routerLink=\"/zone/zone-update\"\n            >Zone Update</mat-list-item\n          >\n        </div>\n      </div>\n      <div\n        class=\"submenu\"\n        [ngClass]=\"{ expanded: showSubmenu }\"\n        *ngIf=\"isShowing || isExpanded\"\n      >\n        <mat-list-item\n          (click)=\"showBrandSubMenu = !showBrandSubMenu\"\n          class=\"parent\"\n        >\n          <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\">Brand</span>\n\n          <mat-icon\n            class=\"menu-button\"\n            [ngClass]=\"{ rotated: showBrandSubMenu }\"\n            *ngIf=\"isExpanded || isShowing\"\n            >expand_more</mat-icon\n          >\n        </mat-list-item>\n        <div\n          class=\"submenu\"\n          [ngClass]=\"{ expanded: showBrandSubMenu }\"\n          *ngIf=\"isShowing || isExpanded\"\n        >\n          <mat-list-item routerLink=\"/brand/brand-grid\"\n            >Brand Grid</mat-list-item\n          >\n          <mat-list-item routerLink=\"/brand/brand-create\"\n            >Brand Create</mat-list-item\n          >\n          <mat-list-item routerLink=\"/brand/brand-update\"\n            >Brand Update</mat-list-item\n          >\n        </div>\n      </div>\n      <div\n        class=\"submenu\"\n        [ngClass]=\"{ expanded: showSubmenu }\"\n        *ngIf=\"isShowing || isExpanded\"\n      >\n        <mat-list-item\n          (click)=\"showMarketSubMenu = !showMarketSubMenu\"\n          class=\"parent\"\n        >\n          <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\">Market</span>\n\n          <mat-icon\n            class=\"menu-button\"\n            [ngClass]=\"{ rotated: showMarketSubMenu }\"\n            *ngIf=\"isExpanded || isShowing\"\n            >expand_more</mat-icon\n          >\n        </mat-list-item>\n        <div\n          class=\"submenu\"\n          [ngClass]=\"{ expanded: showMarketSubMenu }\"\n          *ngIf=\"isShowing || isExpanded\"\n        >\n          <mat-list-item routerLink=\"/market/market-grid\"\n            >Market Grid</mat-list-item\n          >\n          <mat-list-item routerLink=\"/market/market-create\"\n            >Market Create</mat-list-item\n          >\n          <mat-list-item routerLink=\"/market/market-update\"\n            >Market Update</mat-list-item\n          >\n        </div>\n      </div>\n    </mat-nav-list>\n    <mat-nav-list> </mat-nav-list>\n  </mat-sidenav>\n\n  <div class=\"example-sidenav-content\"></div>\n</mat-sidenav-container>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-top-nav',\n  templateUrl: './top-nav.component.html',\n  styleUrls: ['./top-nav.component.scss'],\n})\nexport class TopNavComponent implements OnInit {\n  @ViewChild('sidenav') sidenav: MatSidenav | undefined;\n  isExpanded = true;\n  showSubmenu: boolean = false;\n  isShowing = false;\n  showSubSubMenu: boolean = false;\n  showDistrictSubMenu: boolean = false;\n  showDivisionSubMenu: boolean = false;\n  showThanaSubMenu: boolean = false;\n  showZoneSubMenu: boolean = false;\n  showBrandSubMenu: boolean = false;\n  showMarketSubMenu: boolean = false;\n\n  mouseenter() {\n    if (!this.isExpanded) {\n      this.isShowing = true;\n    }\n  }\n\n  mouseleave() {\n    if (!this.isExpanded) {\n      this.isShowing = false;\n    }\n  }\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<mat-toolbar color=\"primary\" class=\"example-toolbar\">\r\n  <h1 class=\"example-app-name\" routerLink=\"/main\">Crown RPBD</h1>\r\n</mat-toolbar>\r\n<app-division-view></app-division-view>\r\n<button (click)=\"loadaddform()\">add division</button>\r\n<app-add-division *ngIf=\"add_division\"></app-add-division>\r\n","import {\n  Component,\n  OnInit,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { DivisionService } from '../../services/division.service';\nimport { DivisionViewComponent } from './division-view/division-view.component';\nimport { AddDivisionComponent } from './add-division/add-division.component';\n\n@Component({\n  selector: 'app-division',\n  templateUrl: './division.component.html',\n  styleUrls: ['./division.component.scss'],\n})\nexport class DivisionComponent implements OnInit {\n  public add_division = false;\n\n  @Input() divisions: any = [];\n\n  loadaddform() {\n    this.add_division = true;\n  }\n\n  constructor(private divisionservice: DivisionService) {}\n\n  ngOnInit(): void {\n    this.divisionservice.getDivisions().subscribe(\n      (data) => {\n        this.divisions = data;\n        console.log(data);\n      },\n      (error) => console.log(error)\n    );\n\n    // this.divisionservice.createDivision().subscribe()\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Division } from '../../../model/division';\nimport {\n  FormControl,\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { DivisionService } from '../../../services/division.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-add-division',\n  templateUrl: './add-division.component.html',\n  styleUrls: ['./add-division.component.scss'],\n})\nexport class AddDivisionComponent implements OnInit {\n  \n  submitted  = false\n\n  divisionform = new FormGroup({\n    division_code: new FormControl('', Validators.required),\n    division_name: new FormControl(''),\n  });\n\n  constructor(\n    private divisionservice: DivisionService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {}\n\n  \n\n  addDivision = () => {\n    console.log(this.divisionform.value);\n    this.divisionservice\n      .createDivision(\n        this.divisionform.value.division_code,\n        this.divisionform.value.division_name\n      )\n      .subscribe(\n        (result) => console.log(result),\n        (error) => console.log(error)\n      );\n  };\n\n  get f(){\n    return this.divisionform.controls;\n  }\n\n  onSubmit(){\n    this.submitted = true;\n\n    if (this.divisionform.invalid) {\n      return;\n  }\n  }\n}\n","<form [formGroup]=\"divisionform\" (ngSubmit)=\"addDivision()\">\n  <label>\n    Division Code </label>\n    <input\n      type=\"text\"\n      formControlName=\"division_code\"\n      [ngClass]=\"{ 'is-invalid': submitted && f.division_code.errors }\"\n    /><br />\n    <div *ngIf=\"submitted && f.division_code.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.division_code.errors.required\">Division Code is required</div>\n    </div>\n  \n\n  <label\n    >Division Name <input type=\"text\" formControlName=\"division_name\" /><br />\n  </label>\n\n  <button type=\"submit\">Submit</button>\n</form>\n\n{{ divisionform.value | json }}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n})\nexport class NavbarComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <h1>CrownRPBD</h1>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <div>\n      <button\n        mat-button\n        [matMenuTriggerFor]=\"belowMenu\"\n        style=\"background-color: yellow; font-size: 15px; margin: 30px\"\n      >\n        District\n      </button>\n      <mat-menu #belowMenu=\"matMenu\" yPosition=\"below\">\n        <button mat-menu-item routerLink=\"/main/district-view\">\n          View District Code\n        </button>\n      </mat-menu>\n\n      <button\n        mat-button\n        [matMenuTriggerFor]=\"menu2\"\n        style=\"background-color: yellow; font-size: 15px; margin: 30px\"\n      >\n        Thana\n      </button>\n      <mat-menu #menu2=\"matMenu\" yPosition=\"below\">\n        <button mat-menu-item routerLink=\"/main/thana-view\">\n          View Thana Code\n        </button>\n      </mat-menu>\n      <button\n        mat-button\n        [matMenuTriggerFor]=\"menu3\"\n        style=\"background-color: yellow; font-size: 15px; margin: 30px\"\n      >\n        Zone\n      </button>\n      <mat-menu #menu3=\"matMenu\" yPosition=\"below\">\n        <button mat-menu-item routerLink=\"/zone/zone-grid\">\n          View Zone Code\n        </button>\n        <button mat-menu-item routerLink=\"/zone/zone-create\">\n          Create a Zone\n        </button>\n        <button mat-menu-item routerLink=\"/zone/zone-update\">\n          Update or Delete a Zone\n        </button>\n      </mat-menu>\n      <button\n        mat-button\n        [matMenuTriggerFor]=\"menu4\"\n        style=\"background-color: yellow; font-size: 15px; margin: 30px\"\n      >\n        Mokam\n      </button>\n      <mat-menu #menu4=\"matMenu\" yPosition=\"below\">\n        <button mat-menu-item routerLink=\"/market/market-grid\">\n          View Mokam Code\n        </button>\n        <button mat-menu-item routerLink=\"/market/market-create\">\n          Create a New Mokam\n        </button>\n        <button mat-menu-item routerLink=\"/market/market-update\">\n          Update or Delete a Mokam\n        </button>\n      </mat-menu>\n      <button\n        mat-button\n        [matMenuTriggerFor]=\"menu5\"\n        style=\"background-color: yellow; font-size: 15px; margin: 30px\"\n      >\n        Brand\n      </button>\n      <mat-menu #menu5=\"matMenu\" yPosition=\"below\">\n        <button mat-menu-item routerLink=\"/brand/brand-grid\">\n          View Brand Code\n        </button>\n        <button mat-menu-item routerLink=\"/brand/brand-create\">\n          Create a Brand\n        </button>\n        <button mat-menu-item routerLink=\"/brand/brand-update\">\n          Update or Delete a Brand\n        </button>\n      </mat-menu>\n      <button\n        mat-button\n        [matMenuTriggerFor]=\"menu6\"\n        style=\"background-color: yellow; font-size: 15px; margin: 30px\"\n      >\n        Outlet Profile\n      </button>\n      <mat-menu #menu6=\"matMenu\" yPosition=\"below\">\n        <button mat-menu-item routerLink=\"/profile/profile-grid\">\n          View Profile Details\n        </button>\n        <button mat-menu-item routerLink=\"/profile/profile-create\">\n          Create a Profile\n        </button>\n        <button mat-menu-item routerLink=\"/profile/profile-update\">\n          Update or Delete a Profile\n        </button>\n      </mat-menu>\n      <button\n        mat-button\n        [matMenuTriggerFor]=\"menu7\"\n        style=\"background-color: yellow; font-size: 15px; margin: 30px\"\n      >\n        Merchandising\n      </button>\n      <mat-menu #menu7=\"matMenu\" yPosition=\"below\">\n        <button mat-menu-item routerLink=\"/merchandising/merchandising-grid\">\n          View Merchandising Data\n        </button>\n      </mat-menu>\n      <button\n        mat-button\n        [matMenuTriggerFor]=\"menu8\"\n        style=\"background-color: yellow; font-size: 15px; margin: 30px\"\n      >\n        Report\n      </button>\n      <mat-menu #menu8=\"matMenu\">\n        <a\n          href=\"http://localhost:8080/jasperserver/flow.html?_flowId=searchFlow&lastMode=true\"\n          target=\"_blank\"\n          mat-menu-item\n          >View Reports</a\n        >\n      </mat-menu>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<div>\n  <img src=\"assets/img/crc.jpeg\" />\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatExpansionModule } from '@angular/material/expansion';\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss'],\n})\nexport class SidenavComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<mat-nav-list>\n  <mat-divider></mat-divider>\n\n  <h2 matSubheader>Pages</h2>\n\n  <a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"division\"\n    >Division</a\n  >\n  <a\n    mat-list-item\n    routerLinkActive=\"list-item-active\"\n    routerLink=\"district-view\"\n    >District</a\n  >\n  <a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"thana-view\"\n    >Thana</a\n  >\n\n  <!-- wrap all the nav items in an accordion panel -->\n\n  <mat-divider></mat-divider>\n  <h2 matSubheader>CRUD</h2>\n  <div>\n    <mat-accordion class=\"example-headers-align\" multi>\n      <mat-expansion-panel class=\"expan-pannel\">\n        <mat-expansion-panel-header>\n          <mat-panel-title> Brand </mat-panel-title>\n          <mat-panel-description class=\"mat-expansion-panel-header-description\">\n            View, Create, Update or Delete a Brand\n            <mat-icon>business</mat-icon>\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n        <mat-list-item routerLink=\"/brand/brand-grid\" class=\"profile\"\n          >Brand Grid View <mat-icon>table_view</mat-icon></mat-list-item\n        >\n        <mat-list-item routerLink=\"/brand/brand-create\" class=\"profile\"\n          >Create a New Brand<mat-icon\n            >add_circle_outline</mat-icon\n          ></mat-list-item\n        >\n        <mat-list-item routerLink=\"/brand/brand-update\" class=\"profile\"\n          >Update or Delete a Brand<mat-icon>update</mat-icon\n          ><mat-icon>delete_outline</mat-icon></mat-list-item\n        >\n      </mat-expansion-panel>\n    </mat-accordion>\n  </div>\n\n  <div>\n    <mat-accordion class=\"example-headers-align\" multi>\n      <mat-expansion-panel class=\"expan-pannel\">\n        <mat-expansion-panel-header>\n          <mat-panel-title> Zone </mat-panel-title>\n          <mat-panel-description class=\"mat-expansion-panel-header-description\">\n            Create, Update or Delete a Zone\n            <mat-icon>add_circle</mat-icon>\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n        <mat-list-item routerLink=\"/zone/zone-grid\" class=\"profile\"\n          >Zone Grid View<mat-icon>table_view</mat-icon></mat-list-item\n        >\n        <mat-list-item routerLink=\"/zone/zone-create\" class=\"profile\"\n          >Create a New Zone<mat-icon\n            >add_circle_outline</mat-icon\n          ></mat-list-item\n        >\n        <mat-list-item routerLink=\"/zone/zone-update\" class=\"profile\"\n          >Update or Delete a Zone<mat-icon>update</mat-icon\n          ><mat-icon>delete_outline</mat-icon></mat-list-item\n        >\n      </mat-expansion-panel>\n    </mat-accordion>\n  </div>\n\n  <div>\n    <mat-accordion class=\"example-headers-align\" multi>\n      <mat-expansion-panel class=\"expan-pannel\">\n        <mat-expansion-panel-header>\n          <mat-panel-title> Market </mat-panel-title>\n          <mat-panel-description class=\"mat-expansion-panel-header-description\">\n            Create, Update or Delete a Market/Mokam\n            <mat-icon>storefront</mat-icon>\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n        <mat-list-item routerLink=\"/market/market-grid\" class=\"profile\"\n          >Market Grid View<mat-icon>table_view</mat-icon></mat-list-item\n        >\n        <mat-list-item routerLink=\"/market/market-create\" class=\"profile\"\n          >Create a New Market<mat-icon\n            >add_circle_outline</mat-icon\n          ></mat-list-item\n        >\n        <mat-list-item routerLink=\"/market/market-update\" class=\"profile\"\n          >Update or Delete a Market<mat-icon>update</mat-icon\n          ><mat-icon>delete_outline</mat-icon></mat-list-item\n        >\n      </mat-expansion-panel>\n    </mat-accordion>\n  </div>\n  <div>\n    <mat-accordion class=\"example-headers-align\" multi>\n      <mat-expansion-panel class=\"expan-pannel\">\n        <mat-expansion-panel-header>\n          <mat-panel-title> Profile </mat-panel-title>\n          <mat-panel-description class=\"mat-expansion-panel-header-description\">\n            View, Create, Update or Delete a Outlet\n            <mat-icon>add_business</mat-icon>\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n        <mat-list-item routerLink=\"/profile/profile-grid\" class=\"profile\"\n          >Profile Grid View <mat-icon>table_view</mat-icon></mat-list-item\n        >\n\n        <mat-list-item routerLink=\"/profile/profile-create\" class=\"profile\"\n          >Create a New Outlet\n          <mat-icon>add_circle_outline</mat-icon></mat-list-item\n        >\n        <mat-list-item routerLink=\"/profile/profile-update\" class=\"profile\"\n          >Update or Delete a Outlet<mat-icon>update</mat-icon\n          ><mat-icon>delete_outline</mat-icon></mat-list-item\n        >\n      </mat-expansion-panel>\n    </mat-accordion>\n  </div>\n</mat-nav-list>\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OverallMokamService {\r\n  mokamsummaryUrl = 'http://127.0.0.1:8000/api/report/mokamsummary';\r\n  crownmokamsummaryUrl = 'http://127.0.0.1:8000/api/report/crownmokamsummary';\r\n  leadingmokamsummaryUrl =\r\n    'http://127.0.0.1:8000/api/report/leadingbrandmokamsummary';\r\n\r\n  httpheaders = {\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getMokamSummaryReport() {\r\n    return this.httpClient.get(this.mokamsummaryUrl);\r\n  }\r\n\r\n  getCrownMokamSummaryReport() {\r\n    return this.httpClient.get(this.crownmokamsummaryUrl);\r\n  }\r\n\r\n  getLeadingBrandMokamSummaryReport() {\r\n    return this.httpClient.get(this.leadingmokamsummaryUrl);\r\n  }\r\n}\r\n","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ColDef, ColumnApi, GridApi } from 'ag-grid-community';\nimport { MerchandiseService } from '../../services/merchandising.service';\nimport { Merchandising } from '../../model/merchandising';\n\n@Component({\n  selector: 'app-merchandising-grid',\n  templateUrl: './merchandising-grid.component.html',\n  styleUrls: ['./merchandising-grid.component.scss'],\n})\nexport class MerchandisingGridComponent implements OnInit {\n  rowData: any;\n  columnDefs: any;\n  isExpanded = true;\n\n  private api!: GridApi;\n  private columnApi!: ColumnApi;\n  router: any;\n\n  constructor(private merchservice: MerchandiseService) {\n    this.columnDefs = this.createColumnDefs();\n  }\n\n  ngOnInit(): void {\n    this.merchservice.getMerchandise().subscribe(\n      (merchandises) => {\n        this.rowData = merchandises;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  onGridReady(params: { api: GridApi; columnApi: ColumnApi }): void {\n    this.api = params.api;\n    this.columnApi = params.columnApi;\n\n    // this.api.sizeColumnsToFit();\n  }\n\n  private createColumnDefs() {\n    return [\n      {\n        headerName: ' Outlet ID ',\n        field: 'outlet_id',\n        editable: true,\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Visit Month',\n        field: 'date',\n        editable: true,\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n      {\n        headerName: 'Brand Code',\n        field: 'brand_code',\n        editable: true,\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n      {\n        headerName: 'Merchandising Tools',\n        field: 'merchandising_tools',\n        editable: true,\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n      {\n        headerName: 'Quantity',\n        field: 'quantity',\n        editable: true,\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n    ];\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"example-toolbar\">\n  <h1 class=\"example-app-name\" routerLink=\"/main\">Crown RPBD</h1>\n</mat-toolbar>\n<ag-grid-angular\n  style=\"width: 100%; height: 600px\"\n  class=\"ag-theme-alpine\"\n  (gridReady)=\"onGridReady($event)\"\n  [columnDefs]=\"columnDefs\"\n  [rowData]=\"rowData\"\n>\n</ag-grid-angular>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.scss'],\n})\nexport class ReportComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ColDef, ColumnApi, GridApi } from 'ag-grid-community';\nimport { DistrictService } from '../../../services/district.service';\n//import {District} from '../model/district';\n\n@Component({\n  selector: 'app-district-view',\n  templateUrl: './district-view.component.html',\n  styleUrls: ['./district-view.component.scss'],\n})\nexport class DistrictViewComponent implements OnInit {\n  // row data and column definitions\n  // row data and column definitions\n  rowData: any;\n  columnDefs: any;\n\n  // gridApi and columnApi\n  private api!: GridApi;\n  private columnApi!: ColumnApi;\n\n  // inject the athleteService\n  constructor(private districtservice: DistrictService) {\n    this.columnDefs = this.createColumnDefs();\n  }\n\n  // on init, subscribe to the athelete data\n  ngOnInit() {\n    this.districtservice.getDistrict().subscribe(\n      (districts) => {\n        this.rowData = districts;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  // one grid initialisation, grap the APIs and auto resize the columns to fit the available space\n  onGridReady(params: { api: GridApi; columnApi: ColumnApi }): void {\n    this.api = params.api;\n    this.columnApi = params.columnApi;\n\n    this.api.sizeColumnsToFit();\n  }\n\n  // create some simple column definitions\n  private createColumnDefs() {\n    return [\n      {\n        headerName: 'District Code',\n        field: 'district_code',\n        editable: true,\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'District Name',\n        field: 'district_name',\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n    ];\n  }\n}\n","<ag-grid-angular\n  style=\"width: 75%; height: 450px\"\n  class=\"ag-theme-alpine\"\n  (gridReady)=\"onGridReady($event)\"\n  [columnDefs]=\"columnDefs\"\n  [rowData]=\"rowData\"\n>\n</ag-grid-angular>\n","import {Component, OnInit} from '@angular/core';\nimport {ColDef, ColumnApi, GridApi} from 'ag-grid-community';\nimport {ThanaService} from '../../../services/thana.service';\nimport {AgGridModule} from 'ag-grid-angular';\n//import {District} from '../model/district';\n\n\n@Component({\n    selector: 'app-thana-view',\n    templateUrl: './thana-view.component.html',\n    styleUrls: ['./thana-view.component.scss']\n})\nexport class ThanaViewComponent implements OnInit {\n    // row data and column definitions\n    // row data and column definitions\n    rowData : any;\n    columnDefs : any;\n    \n\n    // gridApi and columnApi\n    private api!: GridApi;\n    private columnApi!: ColumnApi;\n    gridApi: any;\n\n    // inject the athleteService\n    constructor(private thanaservice: ThanaService) {\n        this.columnDefs = this.createColumnDefs();\n    }\n\n    // on init, subscribe to the athelete data\n    ngOnInit() {\n        this.thanaservice.getThana().subscribe(\n            thanas => {\n                this.rowData = thanas\n            },\n            error => {\n                console.log(error);\n            }\n        )\n\n        // this.thanaservice.updateThana().subscribe(\n        //     thanas => {\n        //         this.rowData = thanas\n        //     },\n        //     error => {\n        //         console.log(error);\n        //     }\n        // )\n\n    }\n\n    onCellValueChanged(event:any) {\n        //console.log(event) to test it\n        event.data.modified = true;\n      }\n    \n      getAllData() {\n        let rowData: any[] = [];\n        this.gridApi.forEachNode((node: { data: any; }) => rowData.push(node.data));\n        return rowData;  \n      }\n\n    // one grid initialisation, grap the APIs and auto resize the columns to fit the available space\n    onGridReady(params: { api: GridApi; columnApi: ColumnApi; }): void {\n        this.api = params.api;\n        this.columnApi = params.columnApi;\n\n        this.api.sizeColumnsToFit();\n    }\n\n    saveModifiedRows() {\n        const rowData: any[] = [];\n        this.gridApi.forEachNode((node: { data: any; }) => rowData.push(node.data));\n        const modifiedRows = rowData.filter(row => row['modified']);\n        // add API call to save modified rows\n    \n      }\n\n    // create some simple column definitions\n    private createColumnDefs() {\n        return [\n          {headerName:\"Thana Code\" ,\n           field: 'thana_code', \n           editable: true, \n           filter: true, \n           \n           resizable: true, \n           sortable:true },\n          \n          {headerName:'Thana Name',\n           field: 'thana_name',\n           filter: true,\n           editable:true,\n           resizable: true,\n           sortable: true\n          }\n            \n        ]\n    }\n}","<ag-grid-angular\n  style=\"width: 100%; height: 450px\"\n  class=\"ag-theme-alpine\"\n  (gridReady)=\"onGridReady($event)\"\n  (onCellValueChanged)=\"onCellValueChanged($event)\"\n  [columnDefs]=\"columnDefs\"\n  [rowData]=\"rowData\"\n  [pagination]=\"true\"\n  [paginationAutoPageSize]=\"true\"\n>\n</ag-grid-angular>\n","<form [formGroup]=\"empForm\" (ngSubmit)=\"onSubmit()\">\n  <div formArrayName=\"employees\">\n    <div *ngFor=\"let employee of employees().controls; let empIndex = index\">\n      <div\n        [formGroupName]=\"empIndex\"\n        style=\"border: 1px solid blue; padding: 10px; width: 600px; margin: 5px\"\n      >\n        {{ empIndex }}<mat-label> Outlet ID </mat-label>\n        <input type=\"text\" formControlName=\"firstName\" />\n        Visit Month:\n        <input type=\"text\" formControlName=\"lastName\" />\n\n        <button (click)=\"removeEmployee(empIndex)\">Remove</button>\n\n        <div formArrayName=\"skills\">\n          <div\n            *ngFor=\"\n              let skill of employeeSkills(empIndex).controls;\n              let skillIndex = index\n            \"\n          >\n            <div [formGroupName]=\"skillIndex\">\n              {{ skillIndex }}\n              Brand Code :\n              <input type=\"text\" formControlName=\"skill\" />\n              Merchandising Tools:\n              <input type=\"text\" formControlName=\"exp\" />\n              Qunatity:\n              <input type=\"text\" formControlName=\"exp\" />\n\n              <button (click)=\"removeEmployeeSkill(empIndex, skillIndex)\">\n                Remove\n              </button>\n            </div>\n          </div>\n        </div>\n        <button type=\"button\" (click)=\"addEmployeeSkill(empIndex)\">\n          Add Brands\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" (click)=\"addEmployee()\">Add Outlet</button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  FormArray,\n  Validators,\n} from '@angular/forms';\n//import { Observable }    from 'rxjs/Observable';\n\n@Component({\n  selector: 'app-merchandising-create',\n  templateUrl: './merchandising-create.component.html',\n  styleUrls: ['./merchandising-create.component.scss'],\n})\nexport class MerchandisingCreateComponent implements OnInit {\n  empForm!: FormGroup;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.empForm = this.fb.group({\n      employees: this.fb.array([]),\n    });\n  }\n\n  employees(): FormArray {\n    return this.empForm.get('employees') as FormArray;\n  }\n\n  newEmployee(): FormGroup {\n    return this.fb.group({\n      firstName: '',\n      lastName: '',\n      skills: this.fb.array([]),\n    });\n  }\n\n  addEmployee() {\n    this.employees().push(this.newEmployee());\n  }\n\n  removeEmployee(empIndex: number) {\n    this.employees().removeAt(empIndex);\n  }\n\n  employeeSkills(empIndex: number): FormArray {\n    return this.employees().at(empIndex).get('skills') as FormArray;\n  }\n\n  newSkill(): FormGroup {\n    return this.fb.group({\n      skill: '',\n      exp: '',\n    });\n  }\n\n  addEmployeeSkill(empIndex: number) {\n    this.employeeSkills(empIndex).push(this.newSkill());\n  }\n\n  removeEmployeeSkill(empIndex: number, skillIndex: number) {\n    this.employeeSkills(empIndex).removeAt(skillIndex);\n  }\n\n  onSubmit() {\n    console.log(this.empForm.value);\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  @Output() toggleSideBarForMe: EventEmitter<any> = new EventEmitter();\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  toggleSideBar() {\n    this.toggleSideBarForMe.emit();\n    setTimeout(() => {\n      window.dispatchEvent(new Event('resize'));\n    }, 300);\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-icon-button (click)=\"toggleSideBar()\">\n      <mat-icon>menu</mat-icon>\n    </button>\n\n    <h1 class=\"example-app-name\" routerLink=\"/main\">\n      <img src=\"../../assets/img/crown_logo.png\" />\n    </h1>\n\n    <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\n      <ul fxLayout=\"row\" fxLayoutGap=\"20px\">\n        <span class=\"report\">\n          <div>\n            <button mat-button [matMenuTriggerFor]=\"belowMenu\">\n              <mat-icon>summarize</mat-icon>\n            </button>\n            <mat-menu #belowMenu=\"matMenu\" yPosition=\"below\">\n              <button mat-menu-item routerLink=\"/reports/districtreport\">\n                Month-wise District Report\n              </button>\n              <button mat-menu-item routerLink=\"/reports/thanasalesrport\">\n                Thana-wise District Report\n              </button>\n              <button mat-menu-item routerLink=\"/reports/districtretailsreport\">\n                Month-wise District Retails\n              </button>\n              <button mat-menu-item routerLink=\"/reports/thanaretails\">\n                Month-wise Thana Retails\n              </button>\n              <button mat-menu-item routerLink=\"/reports/overallthanareport\">\n                Overall Thana Report\n              </button>\n              <button mat-menu-item routerLink=\"/reports/mokamsalesreport\">\n                Mokam Sales Report\n              </button>\n              <button mat-menu-item routerLink=\"/reports/outletsalesreport\">\n                Outlet Sales Report\n              </button>\n              <button mat-menu-item routerLink=\"/reports/overallmokamreports\">\n                Overall Mokam Report\n              </button>\n            </mat-menu>\n          </div>\n        </span>\n\n        <li>\n          <button mat-icon-button>\n            <mat-icon>settings</mat-icon>\n          </button>\n        </li>\n        <li>\n          <button mat-icon-button>\n            <mat-icon>help_outline</mat-icon>\n          </button>\n        </li>\n        <li>\n          <button mat-button [matMenuTriggerFor]=\"menu\">\n            <mat-icon>person_outline</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item>\n              <mat-icon>exit_to_app</mat-icon>\n              Sign out\n            </button>\n          </mat-menu>\n        </li>\n      </ul>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ThanaSalesReportService {\r\n  thanasalesUrl = 'http://127.0.0.1:8000/api/report/thanasalesvolume';\r\n\r\n  httpheaders = {\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n\r\n  save: any;\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getThanaSalesReport() {\r\n    return this.httpClient.get(this.thanasalesUrl);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Thanadetailservice } from 'src/app/services/thanadetailreport.service';\nimport { ColumnApi, GridApi } from 'ag-grid-community';\nimport 'ag-grid-enterprise';\n\n@Component({\n  selector: 'app-thanadetailreport',\n  templateUrl: './thanadetailreport.component.html',\n  styleUrls: ['./thanadetailreport.component.scss'],\n})\nexport class ThanadetailreportComponent implements OnInit {\n  rowData: any;\n  columnDefs: any;\n\n  crownRowData: any;\n  crownColumnDefs: any;\n\n  leadingRowData: any;\n  leadingColumnDefs: any;\n\n  private api!: GridApi;\n  private columnApi!: ColumnApi;\n  router: any;\n  constructor(private thanadetailservice: Thanadetailservice) {\n    this.columnDefs = this.ThanaDetailsReport();\n    this.crownColumnDefs = this.CrownDetailsReport();\n    this.leadingColumnDefs = this.LeadingBrandDetailReport();\n  }\n\n  ngOnInit(): void {\n    this.thanadetailservice.getThanaDetailsReport().subscribe(\n      (thanadetailreports) => {\n        this.rowData = thanadetailreports;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n\n    this.thanadetailservice.getCrownDetailReport().subscribe(\n      (crowndetailreports) => {\n        this.crownRowData = crowndetailreports;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n\n    this.thanadetailservice.getLeadingBrandDetailReport().subscribe(\n      (leadingdetailreports) => {\n        this.leadingRowData = leadingdetailreports;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  onGridReady(params: { api: GridApi; columnApi: ColumnApi }): void {\n    this.api = params.api;\n    this.columnApi = params.columnApi;\n  }\n\n  private ThanaDetailsReport() {\n    return [\n      {\n        headerName: 'District Name',\n        field: 'district_name',\n        filter: true,\n        rowGroup: true,\n      },\n      {\n        headerName: 'Thana Name',\n        field: 'thana_name',\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Mokam',\n        field: 'mokam',\n        filter: true,\n        resizable: true,\n        sortable: true,\n        aggFunc: 'sum',\n        valueParser: 'Number(newValue)',\n      },\n      {\n        headerName: 'Month Name',\n        field: 'end_month',\n        filter: true,\n      },\n      {\n        headerName: 'Total Retail',\n\n        field: 'total_retail',\n        filter: true,\n        resizable: true,\n        sortable: true,\n        aggFunc: 'sum',\n        valueParser: 'Number(newValue)',\n      },\n\n      {\n        headerName: 'Market Size',\n        field: 'Market_Size',\n        filter: true,\n        resizable: true,\n        sortable: true,\n        aggFunc: 'sum',\n        valueParser: 'Number(newValue)',\n      },\n    ];\n  }\n\n  private CrownDetailsReport() {\n    return [\n      {\n        headerName: 'District Name',\n        field: 'district_name',\n        filter: true,\n        sortable: true,\n        resizable: true,\n        rowGroup: true,\n      },\n      {\n        headerName: 'Thana Name',\n        field: 'thana_name',\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n      {\n        headerName: 'Month',\n        field: 'end_month',\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n      {\n        headerName: 'Mokam',\n        field: 'crown_presence_mokam',\n        filter: true,\n        resizable: true,\n        sortable: true,\n        // editable: true,\n        aggFunc: 'sum',\n        valueParser: 'Number(newValue)',\n      },\n\n      {\n        headerName: 'Retail',\n        field: 'crown_retail',\n        filter: true,\n        resizable: true,\n        sortable: true,\n        aggFunc: 'sum',\n        valueParser: 'Number(newValue)',\n      },\n\n      {\n        headerName: 'Sales',\n        field: 'crown_sales',\n        filter: true,\n        resizable: true,\n        sortable: true,\n        aggFunc: 'sum',\n        valueParser: 'Number(newValue)',\n      },\n      {\n        headerName: 'Share',\n        field: 'Crown_Share',\n        filter: true,\n        resizable: true,\n        sortable: true,\n        aggFunc: 'sum',\n        valueParser: 'Number(newValue)',\n      },\n    ];\n  }\n\n  private LeadingBrandDetailReport() {\n    return [\n      {\n        headerName: 'District Name',\n        field: 'district_name',\n        filter: true,\n        sortable: true,\n        rowGroup: true,\n      },\n      {\n        headerName: 'Thana Name',\n        field: 'thana_name',\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n      {\n        headerName: 'Month',\n        field: 'end_month',\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Brand Name',\n        field: 'brand_name',\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n      {\n        headerName: 'Retail',\n        field: 'LeadingBrandRetail',\n        filter: true,\n        resizable: true,\n        sortable: true,\n        aggFunc: 'sum',\n        valueParser: 'Number(newValue)',\n      },\n      {\n        headerName: 'Sales',\n        field: 'LeadingBrandSales',\n        filter: true,\n        resizable: true,\n        sortable: true,\n        aggFunc: 'sum',\n        valueParser: 'Number(newValue)',\n      },\n      {\n        headerName: 'Share',\n        field: 'Leading_brand_share',\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n    ];\n  }\n}\n","<app-header></app-header>\n\n<header class=\"header\">\n  <h1>Overall Thana Report</h1>\n</header>\n\n<h2>Thana Summary</h2>\n\n<ag-grid-angular\n  style=\"width: 100%; height: 400px; align-items: center\"\n  class=\"ag-theme-alpine\"\n  (gridReady)=\"onGridReady($event)\"\n  [columnDefs]=\"columnDefs\"\n  [rowData]=\"rowData\"\n  [groupIncludeTotalFooter]=\"true\"\n>\n</ag-grid-angular>\n\n<h2>Crown Summary</h2>\n\n<ag-grid-angular\n  style=\"width: 100%; height: 400px; align-items: center\"\n  class=\"ag-theme-alpine\"\n  (gridReady)=\"onGridReady($event)\"\n  [columnDefs]=\"crownColumnDefs\"\n  [rowData]=\"crownRowData\"\n  [groupIncludeTotalFooter]=\"true\"\n>\n</ag-grid-angular>\n\n<h2>Leading Brand Summary</h2>\n\n<ag-grid-angular\n  style=\"width: 100%; height: 400px; align-items: center\"\n  class=\"ag-theme-alpine\"\n  (gridReady)=\"onGridReady($event)\"\n  [columnDefs]=\"leadingColumnDefs\"\n  [rowData]=\"leadingRowData\"\n  [groupIncludeTotalFooter]=\"true\"\n>\n</ag-grid-angular>\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile-update',\n  templateUrl: './profile-update.component.html',\n  styleUrls: ['./profile-update.component.scss'],\n})\nexport class ProfileUpdateComponent implements OnInit {\n  profileForms: FormArray = this.fb.array([]);\n  notification: any;\n  profiles: any;\n\n  // applyFilter(filterValue: string) {\n  //   filterValue = filterValue.trim(); // Remove whitespace\n  //   filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n  //    = filterValue;\n  // }\n\n  constructor(\n    private fb: FormBuilder,\n    private profileservice: ProfileService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.profileservice.getProfile().subscribe((res) => {\n      if (res == []) this.addProfileForm();\n      else {\n        (res as []).forEach((profile: any) => {\n          this.profileForms.push(\n            this.fb.group({\n              outlet_id: [profile.outlet_id],\n              outlet_type_id: [profile.outlet_type_id],\n              outlet_name: [profile.outlet_name],\n              owner_name: [profile.owner_name],\n              holding_no: [profile.holding_no],\n              road_name: [profile.road_name],\n              block_no: [profile.block_no],\n              village: [profile.village],\n              union: [profile.union],\n              post_office: [profile.post_office],\n              market_code: [profile.market_code],\n              zone_code: [profile.zone_code],\n              thana_code: [profile.thana_code],\n              district_code: [profile.district_code],\n              outlet_type: [profile.outlet_type],\n              manager_name: [profile.manager_name],\n              respondent_designation: [profile.respondent_designation],\n              contact_no1: [profile.contact_no1],\n              contact_no2: [profile.contact_no2],\n              contact_no3: [profile.contact_no3],\n              total_staff: [profile.total_staff],\n              outlet_landmark: [profile.outlet_landmark],\n              gps_lat: [profile.gps_lat],\n              gps_long: [profile.gps_long],\n              storage_capacity: [profile.storage_capacity],\n              front_length: [profile.front_length],\n              front_width: [profile.front_width],\n              weekly_holiday: [profile.weekly_holiday],\n              nid: [profile.nid],\n              survey_by: [profile.survey_by],\n              entry_by: [profile.entry_by],\n              visit_date: [profile.visit_date],\n            })\n          );\n        });\n      }\n    });\n  }\n\n  addProfileForm() {\n    this.profileForms.push(\n      this.fb.group({\n        outlet_id: ['', Validators.required],\n        outlet_type_id: ['', Validators.required],\n        outlet_name: [''],\n        owner_name: [''],\n        holding_no: [''],\n        road_name: [''],\n        block_no: [''],\n        village: [''],\n        union: [''],\n        post_office: [''],\n        market_code: ['', Validators.required],\n        zone_code: ['', Validators.required],\n        thana_code: ['', Validators.required],\n        district_code: ['', Validators.required],\n        outlet_type: [''],\n        manager_name: [''],\n        respondent_designation: [''],\n        contact_no1: [''],\n        contact_no2: [''],\n        contact_no3: [''],\n        total_staff: [''],\n        outlet_landmark: [''],\n        gps_lat: [''],\n        gps_long: [''],\n        storage_capacity: [''],\n        front_length: [''],\n        front_width: [''],\n        weekly_holiday: [''],\n        nid: [''],\n        survey_by: [''],\n        entry_by: [''],\n        visit_date: [''],\n      })\n    );\n  }\n\n  profileUpdate(fg: FormGroup) {\n    this.profileservice.updateProfile(fg.value).subscribe((res: any) => {\n      this.showNotification('update');\n    });\n  }\n  onDelete(outlet_id: number, i: any) {\n    // if (brand_code == 0) this.brandForms.removeAt(i);\n    //else if (confirm('Do you want to delete this outlet?'))\n    this.profileservice.deleteProfile(outlet_id).subscribe((res) => {\n      confirm('Do you want to delete this profile?');\n      this.profileForms.removeAt(i);\n      this.showNotification('delete');\n    });\n  }\n  showNotification(category: any) {\n    switch (category) {\n      case 'update':\n        this.notification = { class: 'text-primary', message: 'updated!' };\n        break;\n      case 'delete':\n        this.notification = { class: 'text-danger', message: 'deleted!' };\n        break;\n\n      default:\n        break;\n    }\n    setTimeout(() => {\n      this.notification = null;\n    }, 2000);\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"example-toolbar\">\n  <h1 class=\"example-app-name\" routerLink=\"/main\">Crown RPBD</h1>\n</mat-toolbar>\n\n<div class=\"grid-Table\">\n  <div class=\"thead\">\n    <div class=\"tr\">\n      <div class=\"td\">Outlet ID.</div>\n      <div class=\"td\">Outlet Type ID.</div>\n      <div class=\"td\">Outlet Name</div>\n      <div class=\"td\">Owner Name</div>\n      <div class=\"td\">Holding No.</div>\n      <div class=\"td\">Road Name</div>\n      <div class=\"td\">Block No.</div>\n      <div class=\"td\">Village</div>\n      <div class=\"td\">Union</div>\n      <div class=\"td\">Post Office</div>\n      <div class=\"td\">Market Code</div>\n      <div class=\"td\">Zone Code</div>\n      <div class=\"td\">Thana Code</div>\n      <div class=\"td\">District Code</div>\n      <div class=\"td\">Outlet Type</div>\n      <div class=\"td\">Manager Name</div>\n      <div class=\"td\">Respondent Designation</div>\n      <div class=\"td\">Contact No1</div>\n      <div class=\"td\">Contact No2</div>\n      <div class=\"td\">Contact No3</div>\n      <div class=\"td\">Total Staff</div>\n      <div class=\"td\">Outlet Landmark</div>\n      <div class=\"td\">GPS Lattitude</div>\n      <div class=\"td\">GPS Longitude</div>\n      <div class=\"td\">Storage Capacity</div>\n      <div class=\"td\">Front Length</div>\n      <div class=\"td\">Front Width</div>\n      <div class=\"td\">Weekly Holiday</div>\n      <div class=\"td\">Nid</div>\n      <div class=\"td\">Survey By</div>\n      <div class=\"td\">Entry By</div>\n      <div class=\"td\">Vist Date</div>\n\n      <div class=\"td\">\n        action\n        <span *ngIf=\"notification\" class=\"elementToFadeInAndOut\">\n          <i class=\"fas fa-check-circle {{ notification.class }}\"></i>\n          {{ notification.message }}\n        </span>\n      </div>\n    </div>\n  </div>\n  <div class=\"tbody\">\n    <form\n      class=\"tr\"\n      [formGroup]=\"fg\"\n      *ngFor=\"let fg of profileForms.controls; let i = index\"\n      (submit)=\"profileUpdate(fg)\"\n    >\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"outlet_id\"\n          style=\"width: 135px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"outlet_type_id\"\n          style=\"width: 150px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"outlet_name\"\n          style=\"width: 380px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"owner_name\"\n          style=\"width: 300px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"holding_no\"\n          style=\"width: 70px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"road_name\"\n          style=\"width: 100px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"block_no\"\n          style=\"width: 50px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"village\"\n          style=\"width: 180px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"union\"\n          style=\"width: 180px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"post_office\"\n          style=\"width: 180px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"market_code\"\n          style=\"width: 120px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"zone_code\"\n          style=\"width: 120px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"thana_code\"\n          style=\"width: 110px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"district_code\"\n          style=\"width: 100px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"outlet_type\"\n          style=\"width: 230px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"manager_name\"\n          style=\"width: 300px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"respondent_designation\"\n          style=\"width: 200px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"contact_no1\"\n          style=\"width: 140px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"contact_no2\"\n          style=\"width: 140px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"contact_no3\"\n          style=\"width: 140px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"total_staff\"\n          style=\"width: 45px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"outlet_landmark\"\n          style=\"width: 400px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"gps_lat\"\n          style=\"width: 100px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"gps_long\"\n          style=\"width: 100px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"storage_capacity\"\n          style=\"width: 70px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"front_length\"\n          style=\"width: 50px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"front_width\"\n          style=\"width: 50px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"weekly_holiday\"\n          style=\"width: 40px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"nid\"\n          style=\"width: 140px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"survey_by\"\n          style=\"width: 300px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"entry_by\"\n          style=\"width: 300px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"visit_date\"\n          style=\"width: 150px\"\n        />\n      </div>\n\n      <div class=\"td\">\n        <button type=\"submit\" class=\"btn\">\n          <i class=\"far fa-save fa-lg\"></i>\n          Update\n        </button>\n        <button\n          class=\"btn btn-light ml-1\"\n          (click)=\"onDelete(fg.get('outlet_id').value, i)\"\n        >\n          <i class=\"far fa-trash-alt fa-lg text-danger\"></i>\n          delete\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ThanaRetailsReportService {\r\n  thanaendtretailsUrl = 'http://127.0.0.1:8000/api/report/thanaendretails';\r\n  thanastartretailsUrl = 'http://127.0.0.1:8000/api/report/thanastartretails';\r\n\r\n  httpheaders = {\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n\r\n  save: any;\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getThanaEndRetailsReport() {\r\n    return this.httpClient.get(this.thanaendtretailsUrl);\r\n  }\r\n\r\n  getThanaStartRetailsReport() {\r\n    return this.httpClient.get(this.thanastartretailsUrl);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray } from '@angular/forms';\nimport { ColumnApi, GridApi } from 'ag-grid-community';\nimport { BrandService } from 'src/app/services/brand.service';\n\n@Component({\n  selector: 'app-brand-grid',\n  templateUrl: './brand-grid.component.html',\n  styleUrls: ['./brand-grid.component.scss'],\n})\nexport class BrandGridComponent implements OnInit {\n  rowData: any;\n  columnDefs: any;\n  isExpanded = true;\n\n  private api!: GridApi;\n  private columnApi!: ColumnApi;\n  router: any;\n\n  constructor(private brandservice: BrandService) {\n    this.columnDefs = this.createColumnDefs();\n  }\n\n  ngOnInit(): void {\n    this.brandservice.getBrand().subscribe(\n      (brands) => {\n        this.rowData = brands;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  onGridReady(params: { api: GridApi; columnApi: ColumnApi }): void {\n    this.api = params.api;\n    this.columnApi = params.columnApi;\n\n    // this.api.sizeColumnsToFit();\n  }\n\n  private createColumnDefs() {\n    return [\n      {\n        headerName: 'Brand Code',\n        field: 'brand_code',\n        editable: true,\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Brand Name',\n        field: 'brand_name',\n        editable: true,\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n      {\n        headerName: 'Company Name',\n        field: 'company_name',\n        editable: true,\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n    ];\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"example-toolbar\">\n  <h1 class=\"example-app-name\" routerLink=\"/main\">Crown RPBD</h1>\n</mat-toolbar>\n<ag-grid-angular\n  style=\"width: 100%; height: 1000px\"\n  class=\"ag-theme-alpine\"\n  (gridReady)=\"onGridReady($event)\"\n  [columnDefs]=\"columnDefs\"\n  [rowData]=\"rowData\"\n>\n</ag-grid-angular>\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ZoneService } from 'src/app/services/zone.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-zone-update',\n  templateUrl: './zone-update.component.html',\n  styleUrls: ['./zone-update.component.scss'],\n})\nexport class ZoneUpdateComponent implements OnInit {\n  zoneForms: FormArray = this.fb.array([]);\n  notification: any;\n  constructor(\n    private fb: FormBuilder,\n    private zoneservice: ZoneService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.zoneservice.getZone().subscribe((res) => {\n      if (res == []) this.addZoneForm();\n      else {\n        (res as []).forEach((zone: any) => {\n          this.zoneForms.push(\n            this.fb.group({\n              zone_code: [zone.zone_code],\n              zone_name: [zone.zone_name],\n            })\n          );\n        });\n      }\n    });\n  }\n\n  addZoneForm() {\n    this.zoneForms.push(\n      this.fb.group({\n        zone_code: ['', Validators.required],\n        zone_name: ['', Validators.required],\n      })\n    );\n  }\n\n  zoneUpdate(fg: FormGroup) {\n    this.zoneservice.updateZone(fg.value).subscribe((res: any) => {\n      this.showNotification('update');\n    });\n  }\n  onDelete(zone_code: number, i: any) {\n    // if (brand_code == 0) this.brandForms.removeAt(i);\n    //else if (confirm('Do you want to delete this outlet?'))\n    this.zoneservice.deleteZone(zone_code).subscribe((res) => {\n      confirm('Do you want to delete this zone?');\n      this.zoneForms.removeAt(i);\n      this.showNotification('delete');\n    });\n  }\n  showNotification(category: any) {\n    switch (category) {\n      case 'update':\n        this.notification = { class: 'text-primary', message: 'updated!' };\n        break;\n      case 'delete':\n        this.notification = { class: 'text-danger', message: 'deleted!' };\n        break;\n\n      default:\n        break;\n    }\n    setTimeout(() => {\n      this.notification = null;\n    }, 2000);\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"example-toolbar\">\n  <h1 class=\"example-app-name\" routerLink=\"/main\">Crown RPBD</h1>\n</mat-toolbar>\n<div class=\"grid-Table\">\n  <div class=\"thead\">\n    <div class=\"tr\">\n      <div class=\"td\">Zone Code</div>\n      <div class=\"td\">Zone Name</div>\n\n      <div class=\"td\">\n        action\n        <span *ngIf=\"notification\" class=\"elementToFadeInAndOut\">\n          <i class=\"fas fa-check-circle {{ notification.class }}\"></i>\n          {{ notification.message }}\n        </span>\n      </div>\n    </div>\n  </div>\n  <div class=\"tbody\">\n    <form\n      class=\"tr\"\n      [formGroup]=\"fg\"\n      *ngFor=\"let fg of zoneForms.controls; let i = index\"\n      (submit)=\"zoneUpdate(fg)\"\n    >\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"zone_code\"\n          style=\"width: 130px\"\n        />\n      </div>\n      <div class=\"td\">\n        <input\n          class=\"form-control\"\n          formControlName=\"zone_name\"\n          style=\"width: 380px\"\n        />\n      </div>\n\n      <div class=\"td\">\n        <button type=\"submit\" class=\"btn\">\n          <i class=\"far fa-save fa-lg\"></i>\n          Update\n        </button>\n        <button\n          class=\"btn btn-light ml-1\"\n          (click)=\"onDelete(fg.get('zone_code').value, i)\"\n        >\n          <i class=\"far fa-trash-alt fa-lg text-danger\"></i>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MokamSalesReportService } from 'src/app/services/mokamsalesreport.service';\nimport { ColumnApi, GridApi } from 'ag-grid-community';\nimport 'ag-grid-enterprise';\n\n@Component({\n  selector: 'app-market-sales',\n  templateUrl: './market-sales.component.html',\n  styleUrls: ['./market-sales.component.scss'],\n})\nexport class MarketSalesComponent implements OnInit {\n  mokamsalesrowData: any;\n  mokamsalesColumnDefs: any;\n\n  private api!: GridApi;\n  private columnApi!: ColumnApi;\n  private gridApi!: GridApi;\n\n  router: any;\n\n  constructor(private mokamsalesreportservice: MokamSalesReportService) {\n    this.mokamsalesColumnDefs = this.MokamSalesReport();\n  }\n\n  ngOnInit(): void {\n    this.mokamsalesreportservice.getMokamSalesReport().subscribe(\n      (mokamsalesreports) => {\n        this.mokamsalesrowData = mokamsalesreports;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  onBtPrint() {\n    const api = this.gridApi;\n    setPrinterFriendly(api);\n    setTimeout(function () {\n      print();\n      setNormal(api);\n    }, 2000);\n  }\n\n  onGridReady(params: { api: GridApi; columnApi: ColumnApi }): void {\n    this.api = params.api;\n    this.columnApi = params.columnApi;\n  }\n\n  private MokamSalesReport() {\n    return [\n      {\n        headerName: 'District Name',\n        field: 'district_name',\n        rowGroup: true,\n        filter: true,\n      },\n      {\n        headerName: 'Thana Name',\n        field: 'thana_name',\n        filter: true,\n        rowGroup: true,\n        hide: true,\n      },\n\n      {\n        headerName: 'Market',\n        field: 'market_name',\n        rowGroup: true,\n        hide: true,\n      },\n      {\n        headerName: 'Brand Name',\n        field: 'brand_name',\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n      {\n        headerName: 'End Month Sales Volume/Share',\n\n        children: [\n          {\n            headerName: 'Month Name',\n            field: 'end_month',\n            filter: true,\n          },\n          {\n            headerName: 'Sales',\n            field: 'volume_end',\n            sortable: true,\n            resizable: true,\n            aggFunc: 'sum',\n            valueParser: 'Number(newValue)',\n          },\n          {\n            headerName: 'Share',\n            field: 'end_month_ms',\n            sortable: true,\n            resizable: true,\n          },\n        ],\n      },\n      {\n        headerName: 'Start Month Sales/Share',\n        children: [\n          {\n            headerName: 'Month Name',\n            field: 'start_month',\n            filter: true,\n          },\n          {\n            headerName: 'Sales',\n            field: 'volume_start',\n            sortable: true,\n            resizable: true,\n          },\n          {\n            headerName: 'Share',\n            field: 'start_month_ms',\n            sortable: true,\n            resizable: true,\n          },\n        ],\n      },\n    ];\n  }\n}\nfunction setPrinterFriendly(api: GridApi) {\n  const eGridDiv = document.querySelector('.my-grid') as HTMLElement;\n  eGridDiv.style.height = '';\n  api.setDomLayout('print');\n}\n\nfunction setNormal(api: GridApi) {\n  const eGridDiv = document.querySelector('.my-grid') as HTMLElement;\n  eGridDiv.style.width = '700px';\n  eGridDiv.style.height = '200px';\n  // api.setDomLayout(null);\n}\n","<app-header></app-header>\n\n<ag-grid-angular\n  style=\"width: 100%; height: 100%; justify-content: center\"\n  id=\"myGrid\"\n  class=\"ag-theme-alpine\"\n  (gridReady)=\"onGridReady($event)\"\n  [columnDefs]=\"mokamsalesColumnDefs\"\n  [rowData]=\"mokamsalesrowData\"\n  [animateRows]=\"true\"\n  [groupIncludeTotalFooter]=\"true\"\n>\n</ag-grid-angular>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-expan-pannel',\n  templateUrl: './expan-pannel.component.html',\n  styleUrls: ['./expan-pannel.component.scss']\n})\nexport class ExpanPannelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n  <mat-accordion class=\"example-headers-align\" multi>\n    <mat-expansion-panel class=\"expan-pannel\">\n      <mat-expansion-panel-header>\n        <mat-panel-title> Profile </mat-panel-title>\n        <mat-panel-description class=\"mat-expansion-panel-header-description\">\n          View, Create, Update or Delete a Outlet\n          <mat-icon>add_business</mat-icon>\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <mat-list-item routerLink=\"/profile/profile-grid\" class=\"profile\"\n        >Profile Grid View <mat-icon>table_view</mat-icon></mat-list-item\n      >\n\n      <mat-list-item routerLink=\"/profile/profile-create\" class=\"profile\"\n        >Create a New Outlet\n        <mat-icon>add_circle_outline</mat-icon></mat-list-item\n      >\n      <mat-list-item routerLink=\"/profile/profile-update\" class=\"profile\"\n        >Update or Delete a Outlet<mat-icon>update</mat-icon\n        ><mat-icon>delete_outline</mat-icon></mat-list-item\n      >\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n\n<div>\n  <mat-accordion class=\"example-headers-align\" multi>\n    <mat-expansion-panel class=\"expan-pannel\">\n      <mat-expansion-panel-header>\n        <mat-panel-title> Market </mat-panel-title>\n        <mat-panel-description class=\"mat-expansion-panel-header-description\">\n          Create, Update or Delete a Market/Mokam\n          <mat-icon>storefront</mat-icon>\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <mat-list-item routerLink=\"/market/market-grid\" class=\"profile\"\n        >Market Grid View<mat-icon>table_view</mat-icon></mat-list-item\n      >\n      <mat-list-item routerLink=\"/market/market-create\" class=\"profile\"\n        >Create a New Market<mat-icon\n          >add_circle_outline</mat-icon\n        ></mat-list-item\n      >\n      <mat-list-item routerLink=\"/market/market-update\" class=\"profile\"\n        >Update or Delete a Market<mat-icon>update</mat-icon\n        ><mat-icon>delete_outline</mat-icon></mat-list-item\n      >\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n\n<div>\n  <mat-accordion class=\"example-headers-align\" multi>\n    <mat-expansion-panel class=\"expan-pannel\">\n      <mat-expansion-panel-header>\n        <mat-panel-title> Zone </mat-panel-title>\n        <mat-panel-description class=\"mat-expansion-panel-header-description\">\n          Create, Update or Delete a Zone\n          <mat-icon>add_circle</mat-icon>\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <mat-list-item routerLink=\"/zone/zone-grid\" class=\"profile\"\n        >Zone Grid View<mat-icon>table_view</mat-icon></mat-list-item\n      >\n      <mat-list-item routerLink=\"/zone/zone-create\" class=\"profile\"\n        >Create a New Zone<mat-icon>add_circle_outline</mat-icon></mat-list-item\n      >\n      <mat-list-item routerLink=\"/zone/zone-update\" class=\"profile\"\n        >Update or Delete a Zone<mat-icon>update</mat-icon\n        ><mat-icon>delete_outline</mat-icon></mat-list-item\n      >\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n\n<div>\n  <mat-accordion class=\"example-headers-align\" multi>\n    <mat-expansion-panel class=\"expan-pannel\">\n      <mat-expansion-panel-header>\n        <mat-panel-title> Brand </mat-panel-title>\n        <mat-panel-description class=\"mat-expansion-panel-header-description\">\n          View, Create, Update or Delete a Brand\n          <mat-icon>business</mat-icon>\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <mat-list-item routerLink=\"/brand/brand-grid\" class=\"profile\"\n        >Brand Grid View <mat-icon>table_view</mat-icon></mat-list-item\n      >\n      <mat-list-item routerLink=\"/brand/brand-create\" class=\"profile\"\n        >Create a New Brand<mat-icon\n          >add_circle_outline</mat-icon\n        ></mat-list-item\n      >\n      <mat-list-item routerLink=\"/brand/brand-update\" class=\"profile\"\n        >Update or Delete a Brand<mat-icon>update</mat-icon\n        ><mat-icon>delete_outline</mat-icon></mat-list-item\n      >\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n\n<div>\n  <mat-accordion class=\"example-headers-align\" multi>\n    <mat-expansion-panel class=\"expan-pannel\">\n      <mat-expansion-panel-header>\n        <mat-panel-title> Thana </mat-panel-title>\n        <mat-panel-description class=\"mat-expansion-panel-header-description\">\n          View or Create a Thana\n          <mat-icon>add</mat-icon>\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <mat-list-item routerLink=\"/main/thana-view\" class=\"profile\"\n        >Thana Grid View <mat-icon>table_view</mat-icon></mat-list-item\n      >\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n\n<div>\n  <mat-accordion class=\"example-headers-align\" multi>\n    <mat-expansion-panel class=\"expan-pannel\">\n      <mat-expansion-panel-header>\n        <mat-panel-title> District </mat-panel-title>\n        <mat-panel-description class=\"mat-expansion-panel-header-description\">\n          View or Create a District\n          <mat-icon>add</mat-icon>\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <mat-list-item routerLink=\"/main/district-view\" class=\"profile\"\n        >District Grid View <mat-icon>table_view</mat-icon></mat-list-item\n      >\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n\n<div>\n  <mat-accordion class=\"example-headers-align\" multi>\n    <mat-expansion-panel class=\"expan-pannel\">\n      <mat-expansion-panel-header>\n        <mat-panel-title> Division </mat-panel-title>\n        <mat-panel-description class=\"mat-expansion-panel-header-description\">\n          View or Create a Division\n          <mat-icon>add</mat-icon>\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <mat-list-item routerLink=\"/main/division\" class=\"profile\"\n        >Division Grid View <mat-icon>table_view</mat-icon></mat-list-item\n      >\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n\n<button mat-button [matMenuTriggerFor]=\"menu\">Report</button>\n<mat-menu #menu=\"matMenu\">\n  <a\n    href=\"http://localhost:8080/jasperserver/flow.html?_flowId=searchFlow&lastMode=true\"\n    target=\"_blank\"\n    mat-menu-item\n    >View Reports</a\n  >\n</mat-menu>\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class Thanadetailservice {\r\n  thanadetailsUrl = 'http://127.0.0.1:8000/api/report/thanadetails';\r\n  crowndetailsUrl = 'http://127.0.0.1:8000/api/report/crownsummary';\r\n  leadingdetailUrl = 'http://127.0.0.1:8000/api/report/leadingbrandsummary';\r\n\r\n  httpheaders = {\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n\r\n  save: any;\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getThanaDetailsReport() {\r\n    return this.httpClient.get(this.thanadetailsUrl);\r\n  }\r\n\r\n  getCrownDetailReport() {\r\n    return this.httpClient.get(this.crowndetailsUrl);\r\n  }\r\n\r\n  getLeadingBrandDetailReport() {\r\n    return this.httpClient.get(this.leadingdetailUrl);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { District } from '../model/district';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DistrictService {\n  baseUrl = 'http://127.0.0.1:8000/api/district-list/';\n\n  httpheaders = {\n    headers: { 'Content-Type': 'application/json' },\n  };\n\n  constructor(private httpClient: HttpClient) {}\n\n  getDistrict() {\n    return this.httpClient.get(this.baseUrl);\n  }\n\n  createDistrict(district_code: string, district_name: string) {\n    const body = JSON.stringify({ district_code, district_name });\n    return this.httpClient.post(this.baseUrl, body, this.httpheaders);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MarketService } from 'src/app/services/market-point.service';\nimport { ColumnApi, GridApi } from 'ag-grid-community';\n\n@Component({\n  selector: 'app-market-grid',\n  templateUrl: './market-grid.component.html',\n  styleUrls: ['./market-grid.component.scss'],\n})\nexport class MarketGridComponent implements OnInit {\n  rowData: any;\n  columnDefs: any;\n\n  private api!: GridApi;\n  private columnApi!: ColumnApi;\n  router: any;\n\n  constructor(private zoneservice: MarketService) {\n    this.columnDefs = this.createColumnDefs();\n  }\n\n  ngOnInit(): void {\n    this.zoneservice.getMarket().subscribe(\n      (markets) => {\n        this.rowData = markets;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  onGridReady(params: { api: GridApi; columnApi: ColumnApi }): void {\n    this.api = params.api;\n    this.columnApi = params.columnApi;\n\n    // this.api.sizeColumnsToFit();\n  }\n\n  private createColumnDefs() {\n    return [\n      {\n        headerName: 'Market Code',\n        field: 'market_code',\n        editable: true,\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n\n      {\n        headerName: 'Market Name',\n        field: 'market_name',\n        editable: true,\n        filter: true,\n        resizable: true,\n        sortable: true,\n      },\n    ];\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"example-toolbar\">\n  <h1 class=\"example-app-name\" routerLink=\"/main\">Crown RPBD</h1>\n</mat-toolbar>\n<ag-grid-angular\n  style=\"width: 100%; height: 1000px\"\n  class=\"ag-theme-alpine\"\n  (gridReady)=\"onGridReady($event)\"\n  [columnDefs]=\"columnDefs\"\n  [rowData]=\"rowData\"\n>\n</ag-grid-angular>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss'],\n})\nexport class MainComponent implements OnInit {\n  sideBarOpen = true;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  sideBarToggler($event: any) {\n    this.sideBarOpen = !this.sideBarOpen;\n  }\n}\n","<app-header (toggleSideBarForMe)=\"sideBarToggler($event)\"></app-header>\r\n\r\n<mat-drawer-container>\r\n  <mat-drawer mode=\"side\" [opened]=\"sideBarOpen\">\r\n    <app-sidenav></app-sidenav>\r\n  </mat-drawer>\r\n\r\n  <mat-drawer-content>\r\n    <router-outlet></router-outlet>\r\n  </mat-drawer-content>\r\n</mat-drawer-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MokamSalesReportService {\r\n  mokamsalesUrl = 'http://127.0.0.1:8000/api/report/marketsalesvolume';\r\n\r\n  httpheaders = {\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n\r\n  save: any;\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getMokamSalesReport() {\r\n    return this.httpClient.get(this.mokamsalesUrl);\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Thana } from '../../../model/thana';\nimport {\n  FormControl,\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { ThanaService } from '../../../services/thana.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-thana',\n  templateUrl: './add-thana.component.html',\n  styleUrls: ['./add-thana.component.scss'],\n})\nexport class AddThanaComponent implements OnInit {\n  thanaform = new FormGroup({\n    thana_code: new FormControl(''),\n    thana_name: new FormControl(''),\n  });\n\n  constructor(private thanaservice: ThanaService, private router: Router) {}\n\n  ngOnInit() {}\n\n  addThana = () => {\n    console.log(this.thanaform.value);\n    this.thanaservice\n      .createThana(\n        this.thanaform.value.thana_code,\n        this.thanaform.value.thana_name\n      )\n      .subscribe(\n        (result) => console.log(result),\n        (error) => console.log(error)\n      );\n  };\n}\n","<form [formGroup]=\"thanaform\" (ngSubmit)=\"addThana()\">\n  <label\n    >Thana Code <input type=\"text\" formControlName=\"thana_code\" /><br />\n  </label>\n\n  <label\n    >Thana Name <input type=\"text\" formControlName=\"thana_name\" /><br />\n  </label>\n\n  <button type=\"submit\">Submit</button>\n</form>\n\n{{ thanaform.value | json }}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Zone } from '../model/zone';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ZoneService {\r\n  baseUrl = 'http://127.0.0.1:8000/api/zone-list/';\r\n  updateUrl = 'http://127.0.0.1:8000/api/zone-update/';\r\n  createUrl = 'http://127.0.0.1:8000/api/zone-create/';\r\n\r\n  httpheaders = {\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n  editZone(zone: Zone) {\r\n    return this.httpClient.put(this.updateUrl + 'zone-detail/', zone);\r\n  }\r\n\r\n  getZone() {\r\n    return this.httpClient.get(this.baseUrl);\r\n  }\r\n\r\n  createZone(formData: any) {\r\n    return this.httpClient.post(this.createUrl, formData);\r\n  }\r\n\r\n  updateZone(formData: any) {\r\n    return this.httpClient.put(this.updateUrl + formData.zone_code, formData);\r\n  }\r\n\r\n  deleteZone(id: any) {\r\n    return this.httpClient.delete(this.updateUrl + id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ThanaService {\r\n  body: any;\r\n\r\n  baseUrl = 'http://127.0.0.1:8000/api/thana-list/';\r\n  // thanaUrl = 'http://127.0.0.1:8000/api/thana-detail/';\r\n  httpheaders = {\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n  save: any;\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getThana() {\r\n    return this.httpClient.get(this.baseUrl);\r\n  }\r\n\r\n  createThana(thana_code: string, thana_name: string) {\r\n    const body = JSON.stringify({ thana_code, thana_name });\r\n    return this.httpClient.post(this.baseUrl, body, this.httpheaders);\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}